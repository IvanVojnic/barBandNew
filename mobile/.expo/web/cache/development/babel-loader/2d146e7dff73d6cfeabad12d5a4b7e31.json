{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B \\u043B\\u0435\\u0442\\u043E\\u043C 2022\\\\work2\\\\barband\\\\mobile\\\\screens\\\\friends\\\\getFriends.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { requestGetFriends } from \"../../core/api/API\";\nimport Checkbox from \"../../assets/checkBox\";\nimport { stylesFriend } from \"../../assets/stylesFriends\";\n\nvar GetFriends = function GetFriends() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      friends = _useState6[0],\n      setFriends = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isSelected = _useState8[0],\n      setSelection = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isFriendSelected = _useState12[0],\n      setIsFriendSelected = _useState12[1];\n\n  useEffect(function () {\n    requestGetFriends().then(function (response) {\n      if (response === 1) {\n        setMessage(\"You don't have friends\");\n      } else if (response === 0) {\n        setMessage(\"Error\");\n      } else {\n        setFriends(response);\n      }\n\n      setIsLoaded(true);\n    }).catch(function (error) {\n      setError(error);\n    });\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, isLoaded ? message ? React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 35\n    }\n  }, \"message\") : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, friends.map(function (item) {\n    return React.createElement(View, {\n      style: stylesFriend.friendsList,\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setIsFriendSelected(!isFriendSelected);\n      },\n      isChecked: isFriendSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, item.email));\n  })) : React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, error));\n};\n\nexport default GetFriends;","map":{"version":3,"names":["React","useEffect","useState","requestGetFriends","Checkbox","stylesFriend","GetFriends","isLoaded","setIsLoaded","message","setMessage","friends","setFriends","isSelected","setSelection","error","setError","isFriendSelected","setIsFriendSelected","then","response","catch","map","item","friendsList","id","email"],"sources":["D:/проекты летом 2022/work2/barband/mobile/screens/friends/getFriends.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {View, Text, FlatList} from \"react-native\";\r\nimport {requestGetFriends} from \"../../core/api/API\";\r\nimport Checkbox from \"../../assets/checkBox\"\r\nimport {stylesFriend} from \"../../assets/stylesFriends\";\r\n//import {Checkbox} from \"react-native-paper\";\r\n\r\nconst GetFriends = () => {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [message, setMessage] = useState(null)\r\n    const [friends, setFriends] = useState([]);\r\n    const [isSelected, setSelection] = useState(false);\r\n    const [error, setError] = useState(null)\r\n    const [isFriendSelected, setIsFriendSelected] = useState(false)\r\n\r\n    useEffect(() => {\r\n        requestGetFriends().then((response) => {\r\n            if (response === 1) {\r\n                setMessage(\"You don't have friends\")\r\n            } else if (response === 0) {\r\n                setMessage(\"Error\")\r\n            } else {\r\n                setFriends(response)\r\n            }\r\n            setIsLoaded(true)\r\n        }).catch(error => {\r\n            setError(error);\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <View>\r\n            {isLoaded ? message ? <span>message</span> :\r\n                    <View>\r\n                        {\r\n                            friends.map((item) => (\r\n                                <View style={stylesFriend.friendsList} key={item.id}>\r\n                                <Checkbox onPress={() => {setIsFriendSelected(!isFriendSelected)}}\r\n                                isChecked={isFriendSelected}\r\n\r\n                                />\r\n                                <Text>{item.email}</Text>\r\n                                </View>\r\n                            ))\r\n                        }\r\n                    </View>\r\n                : <span>{error}</span>}\r\n        </View>\r\n    )\r\n}\r\n\r\n/*\r\n<ul>\r\n                {friends.map(friend => (\r\n                    <li>\r\n                        <Checkbox/>\r\n                        <Text key={friend.id}>\r\n                            {`${friend.name}, ${friend.email}`}\r\n                        </Text>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n* */\r\n\r\nexport default GetFriends\r\n\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;AAEA,SAAQC,iBAAR;AACA,OAAOC,QAAP;AACA,SAAQC,YAAR;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EACrB,gBAAgCJ,QAAQ,CAAC,KAAD,CAAxC;EAAA;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA8BN,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOO,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAA8BR,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOS,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAmCV,QAAQ,CAAC,KAAD,CAA3C;EAAA;EAAA,IAAOW,UAAP;EAAA,IAAmBC,YAAnB;;EACA,iBAA0BZ,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOa,KAAP;EAAA,IAAcC,QAAd;;EACA,kBAAgDd,QAAQ,CAAC,KAAD,CAAxD;EAAA;EAAA,IAAOe,gBAAP;EAAA,IAAyBC,mBAAzB;;EAEAjB,SAAS,CAAC,YAAM;IACZE,iBAAiB,GAAGgB,IAApB,CAAyB,UAACC,QAAD,EAAc;MACnC,IAAIA,QAAQ,KAAK,CAAjB,EAAoB;QAChBV,UAAU,CAAC,wBAAD,CAAV;MACH,CAFD,MAEO,IAAIU,QAAQ,KAAK,CAAjB,EAAoB;QACvBV,UAAU,CAAC,OAAD,CAAV;MACH,CAFM,MAEA;QACHE,UAAU,CAACQ,QAAD,CAAV;MACH;;MACDZ,WAAW,CAAC,IAAD,CAAX;IACH,CATD,EASGa,KATH,CASS,UAAAN,KAAK,EAAI;MACdC,QAAQ,CAACD,KAAD,CAAR;IACH,CAXD;EAaH,CAdQ,EAcN,EAdM,CAAT;EAgBA,OACI,oBAAC,IAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKR,QAAQ,GAAGE,OAAO,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAH,GACX,oBAAC,IAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEQE,OAAO,CAACW,GAAR,CAAY,UAACC,IAAD;IAAA,OACR,oBAAC,IAAD;MAAM,KAAK,EAAElB,YAAY,CAACmB,WAA1B;MAAuC,GAAG,EAAED,IAAI,CAACE,EAAjD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACA,oBAAC,QAAD;MAAU,OAAO,EAAE,mBAAM;QAACP,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;MAAuC,CAAjE;MACA,SAAS,EAAEA,gBADX;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADA,EAKA,oBAAC,IAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAOM,IAAI,CAACG,KAAZ,CALA,CADQ;EAAA,CAAZ,CAFR,CADC,GAcH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAOX,KAAP,CAfV,CADJ;AAmBH,CA3CD;;AA0DA,eAAeT,UAAf"},"metadata":{},"sourceType":"module"}