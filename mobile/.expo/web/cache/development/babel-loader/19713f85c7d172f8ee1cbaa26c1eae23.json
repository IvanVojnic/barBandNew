{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getNotifications } from \"../core/api/API\";\nimport GetFriends from \"./friends/getFriends\";\n\nvar Main = function Main(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isNotifLoaded = _useState4[0],\n      setIsNotifLoaded = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      notifCount = _useState6[0],\n      setNotifCount = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      notifications = _useState8[0],\n      setNotifications = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      opacity = _useState10[0],\n      setOpacity = _useState10[1];\n\n  var _useState11 = useState('hidden'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      visibility = _useState12[0],\n      setVisibility = _useState12[1];\n\n  useEffect(function () {\n    getNotifications().then(function (response) {\n      setNotifCount(response.length);\n      setNotifications(response);\n      setIsNotifLoaded(true);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var buttonFriendsHandler = function buttonFriendsHandler() {\n    navigation.navigate('FriendsScreen');\n  };\n\n  var buttonRoomsHandler = function buttonRoomsHandler() {\n    navigation.navigate('RoomsScreen');\n  };\n\n  var buttonNotifications = function buttonNotifications() {\n    navigation.navigate('NotificationsScreen', {\n      response: notifications\n    });\n  };\n\n  var modalWindowShow = {\n    opacity: \"\" + opacity,\n    visibility: \"\" + visibility,\n    backgroundColor: '#efefef',\n    color: '#000',\n    position: 'absolute',\n    display: 'flex',\n    width: '80%',\n    height: '80%',\n    zIndex: 2,\n    border: '2px solid #ff0000',\n    borderRadius: '5px',\n    transitionDuration: '0.5s'\n  };\n  useEffect(function () {\n    if (!modalVisible) {\n      setOpacity(0);\n      setVisibility('hidden');\n    } else {\n      setOpacity(1);\n      setVisibility('visible');\n    }\n  }, [modalVisible]);\n  return _jsxs(View, {\n    style: stylesMain.main,\n    children: [_jsxs(View, {\n      style: modalWindowShow,\n      children: [_jsx(TouchableOpacity, {\n        style: stylesMain.buttonCloseModal,\n        onPress: function onPress() {\n          setModalVisible(false);\n        },\n        children: _jsx(Text, {\n          style: stylesMain.buttonCloseModalText,\n          children: \"Close\"\n        })\n      }), _jsx(GetFriends, {\n        isModal: true\n      })]\n    }), _jsx(View, {\n      style: stylesMain.butFriendsWrapper,\n      children: _jsxs(TouchableOpacity, {\n        style: stylesMain.buttonFriends,\n        onPress: buttonNotifications,\n        children: [_jsx(Text, {\n          style: stylesMain.buttonFriendsText,\n          children: \"Notifications\"\n        }), isNotifLoaded && _jsx(Text, {\n          style: stylesMain.notificationsCount,\n          children: notifCount\n        })]\n      })\n    }), _jsx(View, {\n      style: stylesMain.butFriendsWrapper,\n      children: _jsx(TouchableOpacity, {\n        style: stylesMain.buttonFriends,\n        onPress: buttonRoomsHandler,\n        children: _jsx(Text, {\n          style: stylesMain.buttonFriendsText,\n          children: \"Rooms\"\n        })\n      })\n    }), _jsx(View, {\n      style: stylesMain.butFriendsWrapper,\n      children: _jsx(TouchableOpacity, {\n        style: stylesMain.buttonFriends,\n        onPress: buttonFriendsHandler,\n        children: _jsx(Text, {\n          style: stylesMain.buttonFriendsText,\n          children: \"Friends\"\n        })\n      })\n    }), _jsx(View, {\n      style: stylesMain.butInviteWrapper,\n      children: _jsx(TouchableOpacity, {\n        style: stylesMain.buttonInvite,\n        onPress: function onPress() {\n          setModalVisible(true);\n        },\n        children: _jsx(View, {\n          style: stylesMain.insideButtonCircle,\n          children: _jsx(Text, {\n            style: stylesMain.buttonInviteText,\n            children: \"Invite\"\n          })\n        })\n      })\n    })]\n  });\n};\n\nvar stylesMain = StyleSheet.create({\n  modalWindow: {},\n  buttonCloseModal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonCloseModalText: {\n    color: '#000',\n    fontSize: '20px',\n    fontWeight: 'bold'\n  },\n  notificationsCount: {\n    padding: '15px',\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '22px',\n    width: '22px',\n    fontSize: '14px',\n    border: '2px solid red',\n    borderRadius: '50%',\n    top: '2px',\n    right: '2px'\n  },\n  main: {\n    zIndex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    height: '100%',\n    justifyContent: 'start',\n    alignItems: 'center',\n    position: 'relative'\n  },\n  butFriendsWrapper: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonFriends: {\n    position: 'relative',\n    backgroundColor: 'fff',\n    border: '3px solid #9d0cff',\n    borderRadius: '15px',\n    boxSizing: 'borderBox',\n    minWidth: '120px',\n    fontSize: '20px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonFriendsText: {\n    padding: '10px',\n    color: '#000',\n    fontSize: '30px'\n  },\n  butInviteWrapper: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonInvite: {\n    backgroundColor: '#4A7A4C',\n    padding: '10px',\n    height: '120px',\n    width: '120px',\n    borderRadius: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    boxShadow: '5px 5px 10px 1px rgba(0, 0, 0, .4)'\n  },\n  buttonInviteText: {\n    color: '#ffeeee',\n    fontSize: '30px',\n    fontWeight: '500'\n  },\n  insideButtonCircle: {\n    padding: '5px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '90px',\n    height: '90px',\n    borderRadius: '50%',\n    border: '1px solid #14A588',\n    backgroundColor: '#14A51C'\n  }\n});\nimport * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nNotifications.setNotificationHandler({\n  handleNotification: function () {\n    var _handleNotification = _asyncToGenerator(function* () {\n      return {\n        shouldShowAlert: true,\n        shouldPlaySound: false,\n        shouldSetBadge: false\n      };\n    });\n\n    function handleNotification() {\n      return _handleNotification.apply(this, arguments);\n    }\n\n    return handleNotification;\n  }()\n});\nexport function App() {\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      expoPushToken = _useState14[0],\n      setExpoPushToken = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      notification = _useState16[0],\n      setNotification = _useState16[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  useEffect(function () {\n    registerForPushNotificationsAsync().then(function (token) {\n      return setExpoPushToken(token);\n    });\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      setNotification(notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n}\n\nfunction schedulePushNotification() {\n  return _schedulePushNotification.apply(this, arguments);\n}\n\nfunction _schedulePushNotification() {\n  _schedulePushNotification = _asyncToGenerator(function* () {\n    yield Notifications.scheduleNotificationAsync({\n      content: {\n        title: \"You've got mail! ðŸ“¬\",\n        body: 'Here is the notification body',\n        data: {\n          data: 'goes here'\n        }\n      },\n      trigger: {\n        seconds: 2\n      }\n    });\n  });\n  return _schedulePushNotification.apply(this, arguments);\n}\n\nfunction registerForPushNotificationsAsync() {\n  return _registerForPushNotificationsAsync.apply(this, arguments);\n}\n\nfunction _registerForPushNotificationsAsync() {\n  _registerForPushNotificationsAsync = _asyncToGenerator(function* () {\n    var token;\n\n    if (Platform.OS === 'android') {\n      yield Notifications.setNotificationChannelAsync('default', {\n        name: 'default',\n        importance: Notifications.AndroidImportance.MAX,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: '#FF231F7C'\n      });\n    }\n\n    if (Device.isDevice) {\n      var _yield$Notifications$ = yield Notifications.getPermissionsAsync(),\n          existingStatus = _yield$Notifications$.status;\n\n      var finalStatus = existingStatus;\n\n      if (existingStatus !== 'granted') {\n        var _yield$Notifications$2 = yield Notifications.requestPermissionsAsync(),\n            status = _yield$Notifications$2.status;\n\n        finalStatus = status;\n      }\n\n      if (finalStatus !== 'granted') {\n        alert('Failed to get push token for push notification!');\n        return;\n      }\n\n      token = (yield Notifications.getExpoPushTokenAsync()).data;\n      console.log(token);\n    } else {\n      alert('Must use physical device for Push Notifications');\n    }\n\n    return JSON.stringify(token);\n  });\n  return _registerForPushNotificationsAsync.apply(this, arguments);\n}\n\nexport default Main;","map":{"version":3,"names":["React","useEffect","useState","getNotifications","GetFriends","Main","navigation","modalVisible","setModalVisible","isNotifLoaded","setIsNotifLoaded","notifCount","setNotifCount","notifications","setNotifications","opacity","setOpacity","visibility","setVisibility","then","response","length","catch","error","console","log","buttonFriendsHandler","navigate","buttonRoomsHandler","buttonNotifications","modalWindowShow","backgroundColor","color","position","display","width","height","zIndex","border","borderRadius","transitionDuration","stylesMain","main","buttonCloseModal","buttonCloseModalText","butFriendsWrapper","buttonFriends","buttonFriendsText","notificationsCount","butInviteWrapper","buttonInvite","insideButtonCircle","buttonInviteText","StyleSheet","create","modalWindow","alignItems","justifyContent","fontSize","fontWeight","padding","top","right","flexDirection","boxSizing","minWidth","boxShadow","Device","Notifications","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","App","expoPushToken","setExpoPushToken","notification","setNotification","notificationListener","useRef","responseListener","registerForPushNotificationsAsync","token","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","removeNotificationSubscription","schedulePushNotification","scheduleNotificationAsync","content","title","body","data","trigger","seconds","Platform","OS","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","getExpoPushTokenAsync","JSON","stringify"],"sources":["/Users/apple/Documents/Programming/barBandNew/mobile/screens/MainScreen.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {StyleSheet, View, Text, Button, TouchableOpacity} from \"react-native\";\r\nimport {getNotifications} from \"../core/api/API\";\r\nimport GetFriends from \"./friends/getFriends\";\r\n\r\nconst Main = ({navigation}) => {\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isNotifLoaded, setIsNotifLoaded] = useState(false);\r\n    const [notifCount, setNotifCount] = useState(0);\r\n    const [notifications, setNotifications] = useState(0);\r\n    const [opacity, setOpacity] = useState(0);\r\n    const [visibility, setVisibility] = useState('hidden');\r\n\r\n    useEffect(() => {\r\n        getNotifications().then((response) => {\r\n            setNotifCount(response.length)\r\n            setNotifications(response)\r\n            setIsNotifLoaded(true)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    const buttonFriendsHandler = () => {\r\n        navigation.navigate('FriendsScreen');\r\n    }\r\n\r\n    const buttonRoomsHandler = () => {\r\n        navigation.navigate('RoomsScreen');\r\n    }\r\n\r\n    const buttonNotifications = () => {\r\n        navigation.navigate('NotificationsScreen', {response: notifications});\r\n    }\r\n\r\n    let modalWindowShow = {\r\n        opacity: `${opacity}`,\r\n        visibility: `${visibility}`,\r\n        backgroundColor:'#efefef',\r\n        color:'#000',\r\n        position:'absolute',\r\n        display:'flex',\r\n        width: '80%',\r\n        height:'80%',\r\n        zIndex: 2,\r\n        border: '2px solid #ff0000',\r\n        borderRadius:'5px',\r\n        transitionDuration: '0.5s'\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!modalVisible) {\r\n            setOpacity(0);\r\n            setVisibility('hidden');\r\n        } else {\r\n            setOpacity(1);\r\n            setVisibility('visible');\r\n        }\r\n    }, [modalVisible])\r\n\r\n    return (\r\n        <View style={stylesMain.main}>\r\n            <View style={modalWindowShow}>\r\n                <TouchableOpacity style={stylesMain.buttonCloseModal} onPress={() => {setModalVisible(false)}}>\r\n                    <Text style={stylesMain.buttonCloseModalText}>Close</Text>\r\n                </TouchableOpacity>\r\n                <GetFriends isModal={true}/>\r\n            </View>\r\n            <View style={stylesMain.butFriendsWrapper}>\r\n                <TouchableOpacity style={stylesMain.buttonFriends} onPress={buttonNotifications}>\r\n                    <Text style={stylesMain.buttonFriendsText}>Notifications</Text>\r\n                    {isNotifLoaded && <Text style={stylesMain.notificationsCount}>{notifCount}</Text>}\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={stylesMain.butFriendsWrapper}>\r\n                <TouchableOpacity style={stylesMain.buttonFriends} onPress={buttonRoomsHandler}>\r\n                    <Text style={stylesMain.buttonFriendsText}>Rooms</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={stylesMain.butFriendsWrapper}>\r\n                <TouchableOpacity style={stylesMain.buttonFriends} onPress={buttonFriendsHandler}>\r\n                    <Text style={stylesMain.buttonFriendsText}>Friends</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={stylesMain.butInviteWrapper}>\r\n                <TouchableOpacity style={stylesMain.buttonInvite} onPress={() => {setModalVisible(true)}}>\r\n                    <View style={stylesMain.insideButtonCircle}>\r\n                    <Text style={stylesMain.buttonInviteText}>Invite</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst stylesMain = StyleSheet.create({\r\n    modalWindow:{\r\n\r\n    },\r\n    buttonCloseModal:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    buttonCloseModalText:{\r\n        color:'#000',\r\n        fontSize:'20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    notificationsCount:{\r\n        padding:'15px',\r\n        position: 'absolute',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        height: '22px',\r\n        width: '22px',\r\n        fontSize: '14px',\r\n        border: '2px solid red',\r\n        borderRadius: '50%',\r\n        top:'2px',\r\n        right:'2px'\r\n    },\r\n    main:{\r\n        zIndex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'start',\r\n        alignItems: 'center',\r\n        position: 'relative'\r\n    },\r\n    butFriendsWrapper:{\r\n        display: 'flex',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    buttonFriends:{\r\n        position:'relative',\r\n        backgroundColor:'fff',\r\n        border: '3px solid #9d0cff',\r\n        borderRadius: '15px',\r\n        boxSizing: 'borderBox',\r\n        minWidth: '120px',\r\n        fontSize:'20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    buttonFriendsText:{\r\n        padding: '10px',\r\n        color: '#000',\r\n        fontSize: '30px'\r\n    },\r\n    butInviteWrapper:{\r\n        width: '100%',\r\n        height:'100%',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent: 'center'\r\n    },\r\n    buttonInvite:{\r\n        backgroundColor: '#4A7A4C',\r\n        padding: '10px',\r\n        height: '120px',\r\n        width: '120px',\r\n        borderRadius:'50%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        boxShadow: '5px 5px 10px 1px rgba(0, 0, 0, .4)'\r\n    },\r\n    buttonInviteText:{\r\n        color: '#ffeeee',\r\n        fontSize: '30px',\r\n        fontWeight: '500'\r\n    },\r\n    insideButtonCircle:{\r\n        padding:'5px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '90px',\r\n        height:'90px',\r\n        borderRadius: '50%',\r\n        border: '1px solid #14A588',\r\n        backgroundColor: '#14A51C'\r\n    }\r\n})\r\nimport * as Device from 'expo-device';\r\nimport * as Notifications from 'expo-notifications';\r\n\r\nNotifications.setNotificationHandler({\r\n    handleNotification: async () => ({\r\n        shouldShowAlert: true,\r\n        shouldPlaySound: false,\r\n        shouldSetBadge: false,\r\n    }),\r\n});\r\n\r\nexport function App() {\r\n    const [expoPushToken, setExpoPushToken] = useState('');\r\n    const [notification, setNotification] = useState(false);\r\n    const notificationListener = useRef();\r\n    const responseListener = useRef();\r\n\r\n    useEffect(() => {\r\n        registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\r\n\r\n        notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\r\n            setNotification(notification);\r\n        });\r\n\r\n        responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\r\n            console.log(response);\r\n        });\r\n\r\n        return () => {\r\n            Notifications.removeNotificationSubscription(notificationListener.current);\r\n            Notifications.removeNotificationSubscription(responseListener.current);\r\n        };\r\n    }, []);\r\n\r\n\r\n}\r\n\r\nasync function schedulePushNotification() {\r\n    await Notifications.scheduleNotificationAsync({\r\n        content: {\r\n            title: \"You've got mail! ðŸ“¬\",\r\n            body: 'Here is the notification body',\r\n            data: { data: 'goes here' },\r\n        },\r\n        trigger: { seconds: 2 },\r\n    });\r\n}\r\n\r\nasync function registerForPushNotificationsAsync() {\r\n    let token;\r\n\r\n    if (Platform.OS === 'android') {\r\n        await Notifications.setNotificationChannelAsync('default', {\r\n            name: 'default',\r\n            importance: Notifications.AndroidImportance.MAX,\r\n            vibrationPattern: [0, 250, 250, 250],\r\n            lightColor: '#FF231F7C',\r\n        });\r\n    }\r\n\r\n    if (Device.isDevice) {\r\n        const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n        let finalStatus = existingStatus;\r\n        if (existingStatus !== 'granted') {\r\n            const { status } = await Notifications.requestPermissionsAsync();\r\n            finalStatus = status;\r\n        }\r\n        if (finalStatus !== 'granted') {\r\n            alert('Failed to get push token for push notification!');\r\n            return;\r\n        }\r\n        token = (await Notifications.getExpoPushTokenAsync()).data;\r\n        console.log(token);\r\n    } else {\r\n        alert('Must use physical device for Push Notifications');\r\n    }\r\n\r\n    return JSON.stringify(token);\r\n}\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}