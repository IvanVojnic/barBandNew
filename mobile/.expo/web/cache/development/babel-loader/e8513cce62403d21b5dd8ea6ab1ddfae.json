{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"D:\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B \\u043B\\u0435\\u0442\\u043E\\u043C 2022\\\\loginapp2\\\\mobile\\\\node_modules\\\\react-native\\\\Libraries\\\\Inspector\\\\NetworkOverlay.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar FlatList = require(\"../Lists/FlatList\");\n\nvar React = require('react');\n\nvar ScrollView = require(\"../Components/ScrollView/ScrollView\");\n\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\n\nvar Text = require(\"../Text/Text\");\n\nvar TouchableHighlight = require(\"../Components/Touchable/TouchableHighlight\");\n\nvar View = require(\"../Components/View/View\");\n\nvar WebSocketInterceptor = require(\"../WebSocket/WebSocketInterceptor\");\n\nvar XHRInterceptor = require(\"../Network/XHRInterceptor\");\n\nvar LISTVIEW_CELL_HEIGHT = 15;\nvar nextXHRId = 0;\n\nfunction getStringByValue(value) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n\n  if (typeof value === 'string' && value.length > 500) {\n    return String(value).substr(0, 500).concat('\\n***TRUNCATED TO 500 CHARACTERS***');\n  }\n\n  return value;\n}\n\nfunction getTypeShortName(type) {\n  if (type === 'XMLHttpRequest') {\n    return 'XHR';\n  } else if (type === 'WebSocket') {\n    return 'WS';\n  }\n\n  return '';\n}\n\nfunction keyExtractor(request) {\n  return String(request.id);\n}\n\nvar NetworkOverlay = function (_React$Component) {\n  _inherits(NetworkOverlay, _React$Component);\n\n  var _super = _createSuper(NetworkOverlay);\n\n  function NetworkOverlay() {\n    var _this;\n\n    _classCallCheck(this, NetworkOverlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._requestsListViewScrollMetrics = {\n      offset: 0,\n      visibleLength: 0,\n      contentLength: 0\n    };\n    _this._socketIdMap = {};\n    _this._xhrIdMap = {};\n    _this.state = {\n      detailRowId: null,\n      requests: []\n    };\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var tableRowViewStyle = [styles.tableRow, index % 2 === 1 ? styles.tableRowOdd : styles.tableRowEven, index === _this.state.detailRowId && styles.tableRowPressed];\n      var urlCellViewStyle = styles.urlCellView;\n      var methodCellViewStyle = styles.methodCellView;\n      return React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this._pressRow(index);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: tableRowViewStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: urlCellViewStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.cellText,\n        numberOfLines: 1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }\n      }, item.url)), React.createElement(View, {\n        style: methodCellViewStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.cellText,\n        numberOfLines: 1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }\n      }, getTypeShortName(item.type))))));\n    };\n\n    _this._indicateAdditionalRequests = function () {\n      if (_this._requestsListView) {\n        var distanceFromEndThreshold = LISTVIEW_CELL_HEIGHT * 2;\n        var _this$_requestsListVi = _this._requestsListViewScrollMetrics,\n            offset = _this$_requestsListVi.offset,\n            visibleLength = _this$_requestsListVi.visibleLength,\n            contentLength = _this$_requestsListVi.contentLength;\n        var distanceFromEnd = contentLength - visibleLength - offset;\n        var isCloseToEnd = distanceFromEnd <= distanceFromEndThreshold;\n\n        if (isCloseToEnd) {\n          _this._requestsListView.scrollToEnd();\n        } else {\n          _this._requestsListView.flashScrollIndicators();\n        }\n      }\n    };\n\n    _this._captureRequestsListView = function (listRef) {\n      _this._requestsListView = listRef;\n    };\n\n    _this._requestsListViewOnScroll = function (e) {\n      _this._requestsListViewScrollMetrics.offset = e.nativeEvent.contentOffset.y;\n      _this._requestsListViewScrollMetrics.visibleLength = e.nativeEvent.layoutMeasurement.height;\n      _this._requestsListViewScrollMetrics.contentLength = e.nativeEvent.contentSize.height;\n    };\n\n    _this._scrollDetailToTop = function () {\n      if (_this._detailScrollView) {\n        _this._detailScrollView.scrollTo({\n          y: 0,\n          animated: false\n        });\n      }\n    };\n\n    _this._closeButtonClicked = function () {\n      _this.setState({\n        detailRowId: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NetworkOverlay, [{\n    key: \"_enableXHRInterception\",\n    value: function _enableXHRInterception() {\n      var _this2 = this;\n\n      if (XHRInterceptor.isInterceptorEnabled()) {\n        return;\n      }\n\n      XHRInterceptor.setOpenCallback(function (method, url, xhr) {\n        xhr._index = nextXHRId++;\n        var xhrIndex = _this2.state.requests.length;\n        _this2._xhrIdMap[xhr._index] = xhrIndex;\n        var _xhr = {\n          id: xhrIndex,\n          type: 'XMLHttpRequest',\n          method: method,\n          url: url\n        };\n\n        _this2.setState({\n          requests: _this2.state.requests.concat(_xhr)\n        }, _this2._indicateAdditionalRequests);\n      });\n      XHRInterceptor.setRequestHeaderCallback(function (header, value, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        _this2.setState(function (_ref2) {\n          var requests = _ref2.requests;\n          var networkRequestInfo = requests[xhrIndex];\n\n          if (!networkRequestInfo.requestHeaders) {\n            networkRequestInfo.requestHeaders = {};\n          }\n\n          networkRequestInfo.requestHeaders[header] = value;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.setSendCallback(function (data, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        _this2.setState(function (_ref3) {\n          var requests = _ref3.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.dataSent = data;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.setHeaderReceivedCallback(function (type, size, responseHeaders, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        _this2.setState(function (_ref4) {\n          var requests = _ref4.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.responseContentType = type;\n          networkRequestInfo.responseSize = size;\n          networkRequestInfo.responseHeaders = responseHeaders;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.setResponseCallback(function (status, timeout, response, responseURL, responseType, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        _this2.setState(function (_ref5) {\n          var requests = _ref5.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.status = status;\n          networkRequestInfo.timeout = timeout;\n          networkRequestInfo.response = response;\n          networkRequestInfo.responseURL = responseURL;\n          networkRequestInfo.responseType = responseType;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.enableInterception();\n    }\n  }, {\n    key: \"_enableWebSocketInterception\",\n    value: function _enableWebSocketInterception() {\n      var _this3 = this;\n\n      if (WebSocketInterceptor.isInterceptorEnabled()) {\n        return;\n      }\n\n      WebSocketInterceptor.setConnectCallback(function (url, protocols, options, socketId) {\n        var socketIndex = _this3.state.requests.length;\n        _this3._socketIdMap[socketId] = socketIndex;\n        var _webSocket = {\n          id: socketIndex,\n          type: 'WebSocket',\n          url: url,\n          protocols: protocols\n        };\n\n        _this3.setState({\n          requests: _this3.state.requests.concat(_webSocket)\n        }, _this3._indicateAdditionalRequests);\n      });\n      WebSocketInterceptor.setCloseCallback(function (statusCode, closeReason, socketId) {\n        var socketIndex = _this3._socketIdMap[socketId];\n\n        if (socketIndex === undefined) {\n          return;\n        }\n\n        if (statusCode !== null && closeReason !== null) {\n          _this3.setState(function (_ref6) {\n            var requests = _ref6.requests;\n            var networkRequestInfo = requests[socketIndex];\n            networkRequestInfo.status = statusCode;\n            networkRequestInfo.closeReason = closeReason;\n            return {\n              requests: requests\n            };\n          });\n        }\n      });\n      WebSocketInterceptor.setSendCallback(function (data, socketId) {\n        var socketIndex = _this3._socketIdMap[socketId];\n\n        if (socketIndex === undefined) {\n          return;\n        }\n\n        _this3.setState(function (_ref7) {\n          var requests = _ref7.requests;\n          var networkRequestInfo = requests[socketIndex];\n\n          if (!networkRequestInfo.messages) {\n            networkRequestInfo.messages = '';\n          }\n\n          networkRequestInfo.messages += 'Sent: ' + JSON.stringify(data) + '\\n';\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.setOnMessageCallback(function (socketId, message) {\n        var socketIndex = _this3._socketIdMap[socketId];\n\n        if (socketIndex === undefined) {\n          return;\n        }\n\n        _this3.setState(function (_ref8) {\n          var requests = _ref8.requests;\n          var networkRequestInfo = requests[socketIndex];\n\n          if (!networkRequestInfo.messages) {\n            networkRequestInfo.messages = '';\n          }\n\n          networkRequestInfo.messages += 'Received: ' + JSON.stringify(message) + '\\n';\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.setOnCloseCallback(function (socketId, message) {\n        var socketIndex = _this3._socketIdMap[socketId];\n\n        if (socketIndex === undefined) {\n          return;\n        }\n\n        _this3.setState(function (_ref9) {\n          var requests = _ref9.requests;\n          var networkRequestInfo = requests[socketIndex];\n          networkRequestInfo.serverClose = message;\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.setOnErrorCallback(function (socketId, message) {\n        var socketIndex = _this3._socketIdMap[socketId];\n\n        if (socketIndex === undefined) {\n          return;\n        }\n\n        _this3.setState(function (_ref10) {\n          var requests = _ref10.requests;\n          var networkRequestInfo = requests[socketIndex];\n          networkRequestInfo.serverError = message;\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.enableInterception();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._enableXHRInterception();\n\n      this._enableWebSocketInterception();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      XHRInterceptor.disableInterception();\n      WebSocketInterceptor.disableInterception();\n    }\n  }, {\n    key: \"_renderItemDetail\",\n    value: function _renderItemDetail(id) {\n      var _this4 = this;\n\n      var requestItem = this.state.requests[id];\n      var details = Object.keys(requestItem).map(function (key) {\n        if (key === 'id') {\n          return;\n        }\n\n        return React.createElement(View, {\n          style: styles.detailViewRow,\n          key: key,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: [styles.detailViewText, styles.detailKeyCellView],\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 11\n          }\n        }, key), React.createElement(Text, {\n          style: [styles.detailViewText, styles.detailValueCellView],\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 11\n          }\n        }, getStringByValue(requestItem[key])));\n      });\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.closeButton,\n        onPress: this._closeButtonClicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.closeButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }\n      }, \"v\"))), React.createElement(ScrollView, {\n        style: styles.detailScrollView,\n        ref: function ref(scrollRef) {\n          return _this4._detailScrollView = scrollRef;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 9\n        }\n      }, details));\n    }\n  }, {\n    key: \"_pressRow\",\n    value: function _pressRow(rowId) {\n      this.setState({\n        detailRowId: rowId\n      }, this._scrollDetailToTop);\n    }\n  }, {\n    key: \"_getRequestIndexByXHRID\",\n    value: function _getRequestIndexByXHRID(index) {\n      if (index === undefined) {\n        return -1;\n      }\n\n      var xhrIndex = this._xhrIdMap[index];\n\n      if (xhrIndex === undefined) {\n        return -1;\n      } else {\n        return xhrIndex;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          requests = _this$state.requests,\n          detailRowId = _this$state.detailRowId;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 7\n        }\n      }, detailRowId != null && this._renderItemDetail(detailRowId), React.createElement(View, {\n        style: styles.listViewTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 9\n        }\n      }, requests.length > 0 && React.createElement(View, {\n        style: styles.tableRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.urlTitleCellView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.cellText,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 17\n        }\n      }, \"URL\")), React.createElement(View, {\n        style: styles.methodTitleCellView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.cellText,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 17\n        }\n      }, \"Type\")))), React.createElement(FlatList, {\n        ref: this._captureRequestsListView,\n        onScroll: this._requestsListViewOnScroll,\n        style: styles.listView,\n        data: requests,\n        renderItem: this._renderItem,\n        keyExtractor: keyExtractor,\n        extraData: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return NetworkOverlay;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  listViewTitle: {\n    height: 20\n  },\n  listView: {\n    flex: 1,\n    height: 60\n  },\n  tableRow: {\n    flexDirection: 'row',\n    flex: 1,\n    height: LISTVIEW_CELL_HEIGHT\n  },\n  tableRowEven: {\n    backgroundColor: '#555'\n  },\n  tableRowOdd: {\n    backgroundColor: '#000'\n  },\n  tableRowPressed: {\n    backgroundColor: '#3B5998'\n  },\n  cellText: {\n    color: 'white',\n    fontSize: 12\n  },\n  methodTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 1\n  },\n  urlTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 5,\n    paddingLeft: 3\n  },\n  methodCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  urlCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    flex: 5,\n    paddingLeft: 3\n  },\n  detailScrollView: {\n    flex: 1,\n    height: 180,\n    marginTop: 5,\n    marginBottom: 5\n  },\n  detailKeyCellView: {\n    flex: 1.3\n  },\n  detailValueCellView: {\n    flex: 2\n  },\n  detailViewRow: {\n    flexDirection: 'row',\n    paddingHorizontal: 3\n  },\n  detailViewText: {\n    color: 'white',\n    fontSize: 11\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 10\n  },\n  closeButton: {\n    marginTop: 5,\n    backgroundColor: '#888',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nmodule.exports = NetworkOverlay;","map":{"version":3,"names":["FlatList","require","React","ScrollView","StyleSheet","Text","TouchableHighlight","View","WebSocketInterceptor","XHRInterceptor","LISTVIEW_CELL_HEIGHT","nextXHRId","getStringByValue","value","undefined","JSON","stringify","length","String","substr","concat","getTypeShortName","type","keyExtractor","request","id","NetworkOverlay","_requestsListViewScrollMetrics","offset","visibleLength","contentLength","_socketIdMap","_xhrIdMap","state","detailRowId","requests","_renderItem","item","index","tableRowViewStyle","styles","tableRow","tableRowOdd","tableRowEven","tableRowPressed","urlCellViewStyle","urlCellView","methodCellViewStyle","methodCellView","_pressRow","cellText","url","_indicateAdditionalRequests","_requestsListView","distanceFromEndThreshold","distanceFromEnd","isCloseToEnd","scrollToEnd","flashScrollIndicators","_captureRequestsListView","listRef","_requestsListViewOnScroll","e","nativeEvent","contentOffset","y","layoutMeasurement","height","contentSize","_scrollDetailToTop","_detailScrollView","scrollTo","animated","_closeButtonClicked","setState","isInterceptorEnabled","setOpenCallback","method","xhr","_index","xhrIndex","_xhr","setRequestHeaderCallback","header","_getRequestIndexByXHRID","networkRequestInfo","requestHeaders","setSendCallback","data","dataSent","setHeaderReceivedCallback","size","responseHeaders","responseContentType","responseSize","setResponseCallback","status","timeout","response","responseURL","responseType","enableInterception","setConnectCallback","protocols","options","socketId","socketIndex","_webSocket","setCloseCallback","statusCode","closeReason","messages","setOnMessageCallback","message","setOnCloseCallback","serverClose","setOnErrorCallback","serverError","_enableXHRInterception","_enableWebSocketInterception","disableInterception","requestItem","details","Object","keys","map","key","detailViewRow","detailViewText","detailKeyCellView","detailValueCellView","closeButton","closeButtonText","detailScrollView","scrollRef","rowId","container","_renderItemDetail","listViewTitle","urlTitleCellView","methodTitleCellView","listView","Component","create","paddingTop","paddingBottom","paddingLeft","paddingRight","flex","flexDirection","backgroundColor","color","fontSize","borderColor","borderTopWidth","borderBottomWidth","borderRightWidth","alignItems","justifyContent","borderLeftWidth","marginTop","marginBottom","paddingHorizontal","module","exports"],"sources":["D:/проекты летом 2022/loginapp2/mobile/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst FlatList = require('../Lists/FlatList');\nconst React = require('react');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Text = require('../Text/Text');\nconst TouchableHighlight = require('../Components/Touchable/TouchableHighlight');\nconst View = require('../Components/View/View');\nconst WebSocketInterceptor = require('../WebSocket/WebSocketInterceptor');\nconst XHRInterceptor = require('../Network/XHRInterceptor');\n\nconst LISTVIEW_CELL_HEIGHT = 15;\n\n// Global id for the intercepted XMLHttpRequest objects.\nlet nextXHRId = 0;\n\ntype NetworkRequestInfo = {\n  id: number,\n  type?: string,\n  url?: string,\n  method?: string,\n  status?: number,\n  dataSent?: any,\n  responseContentType?: string,\n  responseSize?: number,\n  requestHeaders?: Object,\n  responseHeaders?: string,\n  response?: Object | string,\n  responseURL?: string,\n  responseType?: string,\n  timeout?: number,\n  closeReason?: string,\n  messages?: string,\n  serverClose?: Object,\n  serverError?: Object,\n  ...\n};\n\ntype Props = $ReadOnly<{||}>;\ntype State = {|\n  detailRowId: ?number,\n  requests: Array<NetworkRequestInfo>,\n|};\n\nfunction getStringByValue(value: any): string {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  if (typeof value === 'string' && value.length > 500) {\n    return String(value)\n      .substr(0, 500)\n      .concat('\\n***TRUNCATED TO 500 CHARACTERS***');\n  }\n  return value;\n}\n\nfunction getTypeShortName(type: any): string {\n  if (type === 'XMLHttpRequest') {\n    return 'XHR';\n  } else if (type === 'WebSocket') {\n    return 'WS';\n  }\n\n  return '';\n}\n\nfunction keyExtractor(request: NetworkRequestInfo): string {\n  return String(request.id);\n}\n\n/**\n * Show all the intercepted network requests over the InspectorPanel.\n */\nclass NetworkOverlay extends React.Component<Props, State> {\n  _requestsListView: ?React.ElementRef<typeof FlatList>;\n  _detailScrollView: ?React.ElementRef<typeof ScrollView>;\n\n  // Metrics are used to decide when if the request list should be sticky, and\n  // scroll to the bottom as new network requests come in, or if the user has\n  // intentionally scrolled away from the bottom - to instead flash the scroll bar\n  // and keep the current position\n  _requestsListViewScrollMetrics = {\n    offset: 0,\n    visibleLength: 0,\n    contentLength: 0,\n  };\n\n  // Map of `socketId` -> `index in `this.state.requests`.\n  _socketIdMap = {};\n  // Map of `xhr._index` -> `index in `this.state.requests`.\n  _xhrIdMap: {[key: number]: number, ...} = {};\n\n  state: State = {\n    detailRowId: null,\n    requests: [],\n  };\n\n  _enableXHRInterception(): void {\n    if (XHRInterceptor.isInterceptorEnabled()) {\n      return;\n    }\n    // Show the XHR request item in listView as soon as it was opened.\n    XHRInterceptor.setOpenCallback((method, url, xhr) => {\n      // Generate a global id for each intercepted xhr object, add this id\n      // to the xhr object as a private `_index` property to identify it,\n      // so that we can distinguish different xhr objects in callbacks.\n      xhr._index = nextXHRId++;\n      const xhrIndex = this.state.requests.length;\n      this._xhrIdMap[xhr._index] = xhrIndex;\n\n      const _xhr: NetworkRequestInfo = {\n        id: xhrIndex,\n        type: 'XMLHttpRequest',\n        method: method,\n        url: url,\n      };\n      this.setState(\n        {\n          requests: this.state.requests.concat(_xhr),\n        },\n        this._indicateAdditionalRequests,\n      );\n    });\n\n    XHRInterceptor.setRequestHeaderCallback((header, value, xhr) => {\n      const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n      if (xhrIndex === -1) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[xhrIndex];\n        if (!networkRequestInfo.requestHeaders) {\n          networkRequestInfo.requestHeaders = {};\n        }\n        networkRequestInfo.requestHeaders[header] = value;\n        return {requests};\n      });\n    });\n\n    XHRInterceptor.setSendCallback((data, xhr) => {\n      const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n      if (xhrIndex === -1) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[xhrIndex];\n        networkRequestInfo.dataSent = data;\n        return {requests};\n      });\n    });\n\n    XHRInterceptor.setHeaderReceivedCallback(\n      (type, size, responseHeaders, xhr) => {\n        const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        this.setState(({requests}) => {\n          const networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.responseContentType = type;\n          networkRequestInfo.responseSize = size;\n          networkRequestInfo.responseHeaders = responseHeaders;\n          return {requests};\n        });\n      },\n    );\n\n    XHRInterceptor.setResponseCallback(\n      (status, timeout, response, responseURL, responseType, xhr) => {\n        const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        this.setState(({requests}) => {\n          const networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.status = status;\n          networkRequestInfo.timeout = timeout;\n          networkRequestInfo.response = response;\n          networkRequestInfo.responseURL = responseURL;\n          networkRequestInfo.responseType = responseType;\n\n          return {requests};\n        });\n      },\n    );\n\n    // Fire above callbacks.\n    XHRInterceptor.enableInterception();\n  }\n\n  _enableWebSocketInterception(): void {\n    if (WebSocketInterceptor.isInterceptorEnabled()) {\n      return;\n    }\n    // Show the WebSocket request item in listView when 'connect' is called.\n    WebSocketInterceptor.setConnectCallback(\n      (url, protocols, options, socketId) => {\n        const socketIndex = this.state.requests.length;\n        this._socketIdMap[socketId] = socketIndex;\n        const _webSocket: NetworkRequestInfo = {\n          id: socketIndex,\n          type: 'WebSocket',\n          url: url,\n          protocols: protocols,\n        };\n        this.setState(\n          {\n            requests: this.state.requests.concat(_webSocket),\n          },\n          this._indicateAdditionalRequests,\n        );\n      },\n    );\n\n    WebSocketInterceptor.setCloseCallback(\n      (statusCode, closeReason, socketId) => {\n        const socketIndex = this._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        if (statusCode !== null && closeReason !== null) {\n          this.setState(({requests}) => {\n            const networkRequestInfo = requests[socketIndex];\n            networkRequestInfo.status = statusCode;\n            networkRequestInfo.closeReason = closeReason;\n            return {requests};\n          });\n        }\n      },\n    );\n\n    WebSocketInterceptor.setSendCallback((data, socketId) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n\n        if (!networkRequestInfo.messages) {\n          networkRequestInfo.messages = '';\n        }\n        networkRequestInfo.messages += 'Sent: ' + JSON.stringify(data) + '\\n';\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnMessageCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n\n        if (!networkRequestInfo.messages) {\n          networkRequestInfo.messages = '';\n        }\n        networkRequestInfo.messages +=\n          'Received: ' + JSON.stringify(message) + '\\n';\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnCloseCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n        networkRequestInfo.serverClose = message;\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnErrorCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n        networkRequestInfo.serverError = message;\n\n        return {requests};\n      });\n    });\n\n    // Fire above callbacks.\n    WebSocketInterceptor.enableInterception();\n  }\n\n  componentDidMount() {\n    this._enableXHRInterception();\n    this._enableWebSocketInterception();\n  }\n\n  componentWillUnmount() {\n    XHRInterceptor.disableInterception();\n    WebSocketInterceptor.disableInterception();\n  }\n\n  _renderItem = ({item, index}): React.Element<any> => {\n    const tableRowViewStyle = [\n      styles.tableRow,\n      index % 2 === 1 ? styles.tableRowOdd : styles.tableRowEven,\n      index === this.state.detailRowId && styles.tableRowPressed,\n    ];\n    const urlCellViewStyle = styles.urlCellView;\n    const methodCellViewStyle = styles.methodCellView;\n\n    return (\n      <TouchableHighlight\n        onPress={() => {\n          this._pressRow(index);\n        }}>\n        <View>\n          <View style={tableRowViewStyle}>\n            <View style={urlCellViewStyle}>\n              <Text style={styles.cellText} numberOfLines={1}>\n                {item.url}\n              </Text>\n            </View>\n            <View style={methodCellViewStyle}>\n              <Text style={styles.cellText} numberOfLines={1}>\n                {getTypeShortName(item.type)}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </TouchableHighlight>\n    );\n  };\n\n  _renderItemDetail(id) {\n    const requestItem = this.state.requests[id];\n    const details = Object.keys(requestItem).map(key => {\n      if (key === 'id') {\n        return;\n      }\n      return (\n        <View style={styles.detailViewRow} key={key}>\n          <Text style={[styles.detailViewText, styles.detailKeyCellView]}>\n            {key}\n          </Text>\n          <Text style={[styles.detailViewText, styles.detailValueCellView]}>\n            {getStringByValue(requestItem[key])}\n          </Text>\n        </View>\n      );\n    });\n\n    return (\n      <View>\n        <TouchableHighlight\n          style={styles.closeButton}\n          onPress={this._closeButtonClicked}>\n          <View>\n            <Text style={styles.closeButtonText}>v</Text>\n          </View>\n        </TouchableHighlight>\n        <ScrollView\n          style={styles.detailScrollView}\n          ref={scrollRef => (this._detailScrollView = scrollRef)}>\n          {details}\n        </ScrollView>\n      </View>\n    );\n  }\n\n  _indicateAdditionalRequests = (): void => {\n    if (this._requestsListView) {\n      const distanceFromEndThreshold = LISTVIEW_CELL_HEIGHT * 2;\n      const {\n        offset,\n        visibleLength,\n        contentLength,\n      } = this._requestsListViewScrollMetrics;\n      const distanceFromEnd = contentLength - visibleLength - offset;\n      const isCloseToEnd = distanceFromEnd <= distanceFromEndThreshold;\n      if (isCloseToEnd) {\n        this._requestsListView.scrollToEnd();\n      } else {\n        this._requestsListView.flashScrollIndicators();\n      }\n    }\n  };\n\n  _captureRequestsListView = (listRef: ?FlatList<NetworkRequestInfo>): void => {\n    this._requestsListView = listRef;\n  };\n\n  _requestsListViewOnScroll = (e: Object): void => {\n    this._requestsListViewScrollMetrics.offset = e.nativeEvent.contentOffset.y;\n    this._requestsListViewScrollMetrics.visibleLength =\n      e.nativeEvent.layoutMeasurement.height;\n    this._requestsListViewScrollMetrics.contentLength =\n      e.nativeEvent.contentSize.height;\n  };\n\n  /**\n   * Popup a scrollView to dynamically show detailed information of\n   * the request, when pressing a row in the network flow listView.\n   */\n  _pressRow(rowId: number): void {\n    this.setState({detailRowId: rowId}, this._scrollDetailToTop);\n  }\n\n  _scrollDetailToTop = (): void => {\n    if (this._detailScrollView) {\n      this._detailScrollView.scrollTo({\n        y: 0,\n        animated: false,\n      });\n    }\n  };\n\n  _closeButtonClicked = () => {\n    this.setState({detailRowId: null});\n  };\n\n  _getRequestIndexByXHRID(index: number): number {\n    if (index === undefined) {\n      return -1;\n    }\n    const xhrIndex = this._xhrIdMap[index];\n    if (xhrIndex === undefined) {\n      return -1;\n    } else {\n      return xhrIndex;\n    }\n  }\n\n  render(): React.Node {\n    const {requests, detailRowId} = this.state;\n\n    return (\n      <View style={styles.container}>\n        {detailRowId != null && this._renderItemDetail(detailRowId)}\n        <View style={styles.listViewTitle}>\n          {requests.length > 0 && (\n            <View style={styles.tableRow}>\n              <View style={styles.urlTitleCellView}>\n                <Text style={styles.cellText} numberOfLines={1}>\n                  URL\n                </Text>\n              </View>\n              <View style={styles.methodTitleCellView}>\n                <Text style={styles.cellText} numberOfLines={1}>\n                  Type\n                </Text>\n              </View>\n            </View>\n          )}\n        </View>\n\n        <FlatList\n          ref={this._captureRequestsListView}\n          onScroll={this._requestsListViewOnScroll}\n          style={styles.listView}\n          data={requests}\n          renderItem={this._renderItem}\n          keyExtractor={keyExtractor}\n          extraData={this.state}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  listViewTitle: {\n    height: 20,\n  },\n  listView: {\n    flex: 1,\n    height: 60,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    flex: 1,\n    height: LISTVIEW_CELL_HEIGHT,\n  },\n  tableRowEven: {\n    backgroundColor: '#555',\n  },\n  tableRowOdd: {\n    backgroundColor: '#000',\n  },\n  tableRowPressed: {\n    backgroundColor: '#3B5998',\n  },\n  cellText: {\n    color: 'white',\n    fontSize: 12,\n  },\n  methodTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 1,\n  },\n  urlTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 5,\n    paddingLeft: 3,\n  },\n  methodCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  urlCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    flex: 5,\n    paddingLeft: 3,\n  },\n  detailScrollView: {\n    flex: 1,\n    height: 180,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  detailKeyCellView: {\n    flex: 1.3,\n  },\n  detailValueCellView: {\n    flex: 2,\n  },\n  detailViewRow: {\n    flexDirection: 'row',\n    paddingHorizontal: 3,\n  },\n  detailViewText: {\n    color: 'white',\n    fontSize: 11,\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 10,\n  },\n  closeButton: {\n    marginTop: 5,\n    backgroundColor: '#888',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nmodule.exports = NetworkOverlay;\n"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,qBAAxB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAME,UAAU,GAAGF,OAAO,uCAA1B;;AACA,IAAMG,UAAU,GAAGH,OAAO,4BAA1B;;AACA,IAAMI,IAAI,GAAGJ,OAAO,gBAApB;;AACA,IAAMK,kBAAkB,GAAGL,OAAO,8CAAlC;;AACA,IAAMM,IAAI,GAAGN,OAAO,2BAApB;;AACA,IAAMO,oBAAoB,GAAGP,OAAO,qCAApC;;AACA,IAAMQ,cAAc,GAAGR,OAAO,6BAA9B;;AAEA,IAAMS,oBAAoB,GAAG,EAA7B;AAGA,IAAIC,SAAS,GAAG,CAAhB;;AA8BA,SAASC,gBAAT,CAA0BC,KAA1B,EAA8C;EAC5C,IAAIA,KAAK,KAAKC,SAAd,EAAyB;IACvB,OAAO,WAAP;EACD;;EACD,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAOE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAP;EACD;;EACD,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACI,MAAN,GAAe,GAAhD,EAAqD;IACnD,OAAOC,MAAM,CAACL,KAAD,CAAN,CACJM,MADI,CACG,CADH,EACM,GADN,EAEJC,MAFI,CAEG,qCAFH,CAAP;EAGD;;EACD,OAAOP,KAAP;AACD;;AAED,SAASQ,gBAAT,CAA0BC,IAA1B,EAA6C;EAC3C,IAAIA,IAAI,KAAK,gBAAb,EAA+B;IAC7B,OAAO,KAAP;EACD,CAFD,MAEO,IAAIA,IAAI,KAAK,WAAb,EAA0B;IAC/B,OAAO,IAAP;EACD;;EAED,OAAO,EAAP;AACD;;AAED,SAASC,YAAT,CAAsBC,OAAtB,EAA2D;EACzD,OAAON,MAAM,CAACM,OAAO,CAACC,EAAT,CAAb;AACD;;IAKKC,c;;;;;;;;;;;;;;;UAQJC,8B,GAAiC;MAC/BC,MAAM,EAAE,CADuB;MAE/BC,aAAa,EAAE,CAFgB;MAG/BC,aAAa,EAAE;IAHgB,C;UAOjCC,Y,GAAe,E;UAEfC,S,GAA0C,E;UAE1CC,K,GAAe;MACbC,WAAW,EAAE,IADA;MAEbC,QAAQ,EAAE;IAFG,C;;UA8NfC,W,GAAc,gBAAuC;MAAA,IAArCC,IAAqC,QAArCA,IAAqC;MAAA,IAA/BC,KAA+B,QAA/BA,KAA+B;MACnD,IAAMC,iBAAiB,GAAG,CACxBC,MAAM,CAACC,QADiB,EAExBH,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkBE,MAAM,CAACE,WAAzB,GAAuCF,MAAM,CAACG,YAFtB,EAGxBL,KAAK,KAAK,MAAKL,KAAL,CAAWC,WAArB,IAAoCM,MAAM,CAACI,eAHnB,CAA1B;MAKA,IAAMC,gBAAgB,GAAGL,MAAM,CAACM,WAAhC;MACA,IAAMC,mBAAmB,GAAGP,MAAM,CAACQ,cAAnC;MAEA,OACE,oBAAC,kBAAD;QACE,OAAO,EAAE,mBAAM;UACb,MAAKC,SAAL,CAAeX,KAAf;QACD,CAHH;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAIE,oBAAC,IAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,oBAAC,IAAD;QAAM,KAAK,EAAEC,iBAAb;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,oBAAC,IAAD;QAAM,KAAK,EAAEM,gBAAb;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,oBAAC,IAAD;QAAM,KAAK,EAAEL,MAAM,CAACU,QAApB;QAA8B,aAAa,EAAE,CAA7C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACGb,IAAI,CAACc,GADR,CADF,CADF,EAME,oBAAC,IAAD;QAAM,KAAK,EAAEJ,mBAAb;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,oBAAC,IAAD;QAAM,KAAK,EAAEP,MAAM,CAACU,QAApB;QAA8B,aAAa,EAAE,CAA7C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACG7B,gBAAgB,CAACgB,IAAI,CAACf,IAAN,CADnB,CADF,CANF,CADF,CAJF,CADF;IAqBD,C;;UAsCD8B,2B,GAA8B,YAAY;MACxC,IAAI,MAAKC,iBAAT,EAA4B;QAC1B,IAAMC,wBAAwB,GAAG5C,oBAAoB,GAAG,CAAxD;QACA,4BAII,MAAKiB,8BAJT;QAAA,IACEC,MADF,yBACEA,MADF;QAAA,IAEEC,aAFF,yBAEEA,aAFF;QAAA,IAGEC,aAHF,yBAGEA,aAHF;QAKA,IAAMyB,eAAe,GAAGzB,aAAa,GAAGD,aAAhB,GAAgCD,MAAxD;QACA,IAAM4B,YAAY,GAAGD,eAAe,IAAID,wBAAxC;;QACA,IAAIE,YAAJ,EAAkB;UAChB,MAAKH,iBAAL,CAAuBI,WAAvB;QACD,CAFD,MAEO;UACL,MAAKJ,iBAAL,CAAuBK,qBAAvB;QACD;MACF;IACF,C;;UAEDC,wB,GAA2B,UAACC,OAAD,EAAkD;MAC3E,MAAKP,iBAAL,GAAyBO,OAAzB;IACD,C;;UAEDC,yB,GAA4B,UAACC,CAAD,EAAqB;MAC/C,MAAKnC,8BAAL,CAAoCC,MAApC,GAA6CkC,CAAC,CAACC,WAAF,CAAcC,aAAd,CAA4BC,CAAzE;MACA,MAAKtC,8BAAL,CAAoCE,aAApC,GACEiC,CAAC,CAACC,WAAF,CAAcG,iBAAd,CAAgCC,MADlC;MAEA,MAAKxC,8BAAL,CAAoCG,aAApC,GACEgC,CAAC,CAACC,WAAF,CAAcK,WAAd,CAA0BD,MAD5B;IAED,C;;UAUDE,kB,GAAqB,YAAY;MAC/B,IAAI,MAAKC,iBAAT,EAA4B;QAC1B,MAAKA,iBAAL,CAAuBC,QAAvB,CAAgC;UAC9BN,CAAC,EAAE,CAD2B;UAE9BO,QAAQ,EAAE;QAFoB,CAAhC;MAID;IACF,C;;UAEDC,mB,GAAsB,YAAM;MAC1B,MAAKC,QAAL,CAAc;QAACxC,WAAW,EAAE;MAAd,CAAd;IACD,C;;;;;;;WA9UD,kCAA+B;MAAA;;MAC7B,IAAIzB,cAAc,CAACkE,oBAAf,EAAJ,EAA2C;QACzC;MACD;;MAEDlE,cAAc,CAACmE,eAAf,CAA+B,UAACC,MAAD,EAAS1B,GAAT,EAAc2B,GAAd,EAAsB;QAInDA,GAAG,CAACC,MAAJ,GAAapE,SAAS,EAAtB;QACA,IAAMqE,QAAQ,GAAG,MAAI,CAAC/C,KAAL,CAAWE,QAAX,CAAoBlB,MAArC;QACA,MAAI,CAACe,SAAL,CAAe8C,GAAG,CAACC,MAAnB,IAA6BC,QAA7B;QAEA,IAAMC,IAAwB,GAAG;UAC/BxD,EAAE,EAAEuD,QAD2B;UAE/B1D,IAAI,EAAE,gBAFyB;UAG/BuD,MAAM,EAAEA,MAHuB;UAI/B1B,GAAG,EAAEA;QAJ0B,CAAjC;;QAMA,MAAI,CAACuB,QAAL,CACE;UACEvC,QAAQ,EAAE,MAAI,CAACF,KAAL,CAAWE,QAAX,CAAoBf,MAApB,CAA2B6D,IAA3B;QADZ,CADF,EAIE,MAAI,CAAC7B,2BAJP;MAMD,CApBD;MAsBA3C,cAAc,CAACyE,wBAAf,CAAwC,UAACC,MAAD,EAAStE,KAAT,EAAgBiE,GAAhB,EAAwB;QAC9D,IAAME,QAAQ,GAAG,MAAI,CAACI,uBAAL,CAA6BN,GAAG,CAACC,MAAjC,CAAjB;;QACA,IAAIC,QAAQ,KAAK,CAAC,CAAlB,EAAqB;UACnB;QACD;;QAED,MAAI,CAACN,QAAL,CAAc,iBAAgB;UAAA,IAAdvC,QAAc,SAAdA,QAAc;UAC5B,IAAMkD,kBAAkB,GAAGlD,QAAQ,CAAC6C,QAAD,CAAnC;;UACA,IAAI,CAACK,kBAAkB,CAACC,cAAxB,EAAwC;YACtCD,kBAAkB,CAACC,cAAnB,GAAoC,EAApC;UACD;;UACDD,kBAAkB,CAACC,cAAnB,CAAkCH,MAAlC,IAA4CtE,KAA5C;UACA,OAAO;YAACsB,QAAQ,EAARA;UAAD,CAAP;QACD,CAPD;MAQD,CAdD;MAgBA1B,cAAc,CAAC8E,eAAf,CAA+B,UAACC,IAAD,EAAOV,GAAP,EAAe;QAC5C,IAAME,QAAQ,GAAG,MAAI,CAACI,uBAAL,CAA6BN,GAAG,CAACC,MAAjC,CAAjB;;QACA,IAAIC,QAAQ,KAAK,CAAC,CAAlB,EAAqB;UACnB;QACD;;QAED,MAAI,CAACN,QAAL,CAAc,iBAAgB;UAAA,IAAdvC,QAAc,SAAdA,QAAc;UAC5B,IAAMkD,kBAAkB,GAAGlD,QAAQ,CAAC6C,QAAD,CAAnC;UACAK,kBAAkB,CAACI,QAAnB,GAA8BD,IAA9B;UACA,OAAO;YAACrD,QAAQ,EAARA;UAAD,CAAP;QACD,CAJD;MAKD,CAXD;MAaA1B,cAAc,CAACiF,yBAAf,CACE,UAACpE,IAAD,EAAOqE,IAAP,EAAaC,eAAb,EAA8Bd,GAA9B,EAAsC;QACpC,IAAME,QAAQ,GAAG,MAAI,CAACI,uBAAL,CAA6BN,GAAG,CAACC,MAAjC,CAAjB;;QACA,IAAIC,QAAQ,KAAK,CAAC,CAAlB,EAAqB;UACnB;QACD;;QAED,MAAI,CAACN,QAAL,CAAc,iBAAgB;UAAA,IAAdvC,QAAc,SAAdA,QAAc;UAC5B,IAAMkD,kBAAkB,GAAGlD,QAAQ,CAAC6C,QAAD,CAAnC;UACAK,kBAAkB,CAACQ,mBAAnB,GAAyCvE,IAAzC;UACA+D,kBAAkB,CAACS,YAAnB,GAAkCH,IAAlC;UACAN,kBAAkB,CAACO,eAAnB,GAAqCA,eAArC;UACA,OAAO;YAACzD,QAAQ,EAARA;UAAD,CAAP;QACD,CAND;MAOD,CAdH;MAiBA1B,cAAc,CAACsF,mBAAf,CACE,UAACC,MAAD,EAASC,OAAT,EAAkBC,QAAlB,EAA4BC,WAA5B,EAAyCC,YAAzC,EAAuDtB,GAAvD,EAA+D;QAC7D,IAAME,QAAQ,GAAG,MAAI,CAACI,uBAAL,CAA6BN,GAAG,CAACC,MAAjC,CAAjB;;QACA,IAAIC,QAAQ,KAAK,CAAC,CAAlB,EAAqB;UACnB;QACD;;QAED,MAAI,CAACN,QAAL,CAAc,iBAAgB;UAAA,IAAdvC,QAAc,SAAdA,QAAc;UAC5B,IAAMkD,kBAAkB,GAAGlD,QAAQ,CAAC6C,QAAD,CAAnC;UACAK,kBAAkB,CAACW,MAAnB,GAA4BA,MAA5B;UACAX,kBAAkB,CAACY,OAAnB,GAA6BA,OAA7B;UACAZ,kBAAkB,CAACa,QAAnB,GAA8BA,QAA9B;UACAb,kBAAkB,CAACc,WAAnB,GAAiCA,WAAjC;UACAd,kBAAkB,CAACe,YAAnB,GAAkCA,YAAlC;UAEA,OAAO;YAACjE,QAAQ,EAARA;UAAD,CAAP;QACD,CATD;MAUD,CAjBH;MAqBA1B,cAAc,CAAC4F,kBAAf;IACD;;;WAED,wCAAqC;MAAA;;MACnC,IAAI7F,oBAAoB,CAACmE,oBAArB,EAAJ,EAAiD;QAC/C;MACD;;MAEDnE,oBAAoB,CAAC8F,kBAArB,CACE,UAACnD,GAAD,EAAMoD,SAAN,EAAiBC,OAAjB,EAA0BC,QAA1B,EAAuC;QACrC,IAAMC,WAAW,GAAG,MAAI,CAACzE,KAAL,CAAWE,QAAX,CAAoBlB,MAAxC;QACA,MAAI,CAACc,YAAL,CAAkB0E,QAAlB,IAA8BC,WAA9B;QACA,IAAMC,UAA8B,GAAG;UACrClF,EAAE,EAAEiF,WADiC;UAErCpF,IAAI,EAAE,WAF+B;UAGrC6B,GAAG,EAAEA,GAHgC;UAIrCoD,SAAS,EAAEA;QAJ0B,CAAvC;;QAMA,MAAI,CAAC7B,QAAL,CACE;UACEvC,QAAQ,EAAE,MAAI,CAACF,KAAL,CAAWE,QAAX,CAAoBf,MAApB,CAA2BuF,UAA3B;QADZ,CADF,EAIE,MAAI,CAACvD,2BAJP;MAMD,CAhBH;MAmBA5C,oBAAoB,CAACoG,gBAArB,CACE,UAACC,UAAD,EAAaC,WAAb,EAA0BL,QAA1B,EAAuC;QACrC,IAAMC,WAAW,GAAG,MAAI,CAAC3E,YAAL,CAAkB0E,QAAlB,CAApB;;QACA,IAAIC,WAAW,KAAK5F,SAApB,EAA+B;UAC7B;QACD;;QACD,IAAI+F,UAAU,KAAK,IAAf,IAAuBC,WAAW,KAAK,IAA3C,EAAiD;UAC/C,MAAI,CAACpC,QAAL,CAAc,iBAAgB;YAAA,IAAdvC,QAAc,SAAdA,QAAc;YAC5B,IAAMkD,kBAAkB,GAAGlD,QAAQ,CAACuE,WAAD,CAAnC;YACArB,kBAAkB,CAACW,MAAnB,GAA4Ba,UAA5B;YACAxB,kBAAkB,CAACyB,WAAnB,GAAiCA,WAAjC;YACA,OAAO;cAAC3E,QAAQ,EAARA;YAAD,CAAP;UACD,CALD;QAMD;MACF,CAdH;MAiBA3B,oBAAoB,CAAC+E,eAArB,CAAqC,UAACC,IAAD,EAAOiB,QAAP,EAAoB;QACvD,IAAMC,WAAW,GAAG,MAAI,CAAC3E,YAAL,CAAkB0E,QAAlB,CAApB;;QACA,IAAIC,WAAW,KAAK5F,SAApB,EAA+B;UAC7B;QACD;;QAED,MAAI,CAAC4D,QAAL,CAAc,iBAAgB;UAAA,IAAdvC,QAAc,SAAdA,QAAc;UAC5B,IAAMkD,kBAAkB,GAAGlD,QAAQ,CAACuE,WAAD,CAAnC;;UAEA,IAAI,CAACrB,kBAAkB,CAAC0B,QAAxB,EAAkC;YAChC1B,kBAAkB,CAAC0B,QAAnB,GAA8B,EAA9B;UACD;;UACD1B,kBAAkB,CAAC0B,QAAnB,IAA+B,WAAWhG,IAAI,CAACC,SAAL,CAAewE,IAAf,CAAX,GAAkC,IAAjE;UAEA,OAAO;YAACrD,QAAQ,EAARA;UAAD,CAAP;QACD,CATD;MAUD,CAhBD;MAkBA3B,oBAAoB,CAACwG,oBAArB,CAA0C,UAACP,QAAD,EAAWQ,OAAX,EAAuB;QAC/D,IAAMP,WAAW,GAAG,MAAI,CAAC3E,YAAL,CAAkB0E,QAAlB,CAApB;;QACA,IAAIC,WAAW,KAAK5F,SAApB,EAA+B;UAC7B;QACD;;QAED,MAAI,CAAC4D,QAAL,CAAc,iBAAgB;UAAA,IAAdvC,QAAc,SAAdA,QAAc;UAC5B,IAAMkD,kBAAkB,GAAGlD,QAAQ,CAACuE,WAAD,CAAnC;;UAEA,IAAI,CAACrB,kBAAkB,CAAC0B,QAAxB,EAAkC;YAChC1B,kBAAkB,CAAC0B,QAAnB,GAA8B,EAA9B;UACD;;UACD1B,kBAAkB,CAAC0B,QAAnB,IACE,eAAehG,IAAI,CAACC,SAAL,CAAeiG,OAAf,CAAf,GAAyC,IAD3C;UAGA,OAAO;YAAC9E,QAAQ,EAARA;UAAD,CAAP;QACD,CAVD;MAWD,CAjBD;MAmBA3B,oBAAoB,CAAC0G,kBAArB,CAAwC,UAACT,QAAD,EAAWQ,OAAX,EAAuB;QAC7D,IAAMP,WAAW,GAAG,MAAI,CAAC3E,YAAL,CAAkB0E,QAAlB,CAApB;;QACA,IAAIC,WAAW,KAAK5F,SAApB,EAA+B;UAC7B;QACD;;QAED,MAAI,CAAC4D,QAAL,CAAc,iBAAgB;UAAA,IAAdvC,QAAc,SAAdA,QAAc;UAC5B,IAAMkD,kBAAkB,GAAGlD,QAAQ,CAACuE,WAAD,CAAnC;UACArB,kBAAkB,CAAC8B,WAAnB,GAAiCF,OAAjC;UAEA,OAAO;YAAC9E,QAAQ,EAARA;UAAD,CAAP;QACD,CALD;MAMD,CAZD;MAcA3B,oBAAoB,CAAC4G,kBAArB,CAAwC,UAACX,QAAD,EAAWQ,OAAX,EAAuB;QAC7D,IAAMP,WAAW,GAAG,MAAI,CAAC3E,YAAL,CAAkB0E,QAAlB,CAApB;;QACA,IAAIC,WAAW,KAAK5F,SAApB,EAA+B;UAC7B;QACD;;QAED,MAAI,CAAC4D,QAAL,CAAc,kBAAgB;UAAA,IAAdvC,QAAc,UAAdA,QAAc;UAC5B,IAAMkD,kBAAkB,GAAGlD,QAAQ,CAACuE,WAAD,CAAnC;UACArB,kBAAkB,CAACgC,WAAnB,GAAiCJ,OAAjC;UAEA,OAAO;YAAC9E,QAAQ,EAARA;UAAD,CAAP;QACD,CALD;MAMD,CAZD;MAeA3B,oBAAoB,CAAC6F,kBAArB;IACD;;;WAED,6BAAoB;MAClB,KAAKiB,sBAAL;;MACA,KAAKC,4BAAL;IACD;;;WAED,gCAAuB;MACrB9G,cAAc,CAAC+G,mBAAf;MACAhH,oBAAoB,CAACgH,mBAArB;IACD;;;WAkCD,2BAAkB/F,EAAlB,EAAsB;MAAA;;MACpB,IAAMgG,WAAW,GAAG,KAAKxF,KAAL,CAAWE,QAAX,CAAoBV,EAApB,CAApB;MACA,IAAMiG,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6B,UAAAC,GAAG,EAAI;QAClD,IAAIA,GAAG,KAAK,IAAZ,EAAkB;UAChB;QACD;;QACD,OACE,oBAAC,IAAD;UAAM,KAAK,EAAEtF,MAAM,CAACuF,aAApB;UAAmC,GAAG,EAAED,GAAxC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACE,oBAAC,IAAD;UAAM,KAAK,EAAE,CAACtF,MAAM,CAACwF,cAAR,EAAwBxF,MAAM,CAACyF,iBAA/B,CAAb;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACGH,GADH,CADF,EAIE,oBAAC,IAAD;UAAM,KAAK,EAAE,CAACtF,MAAM,CAACwF,cAAR,EAAwBxF,MAAM,CAAC0F,mBAA/B,CAAb;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACGtH,gBAAgB,CAAC6G,WAAW,CAACK,GAAD,CAAZ,CADnB,CAJF,CADF;MAUD,CAde,CAAhB;MAgBA,OACE,oBAAC,IAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,oBAAC,kBAAD;QACE,KAAK,EAAEtF,MAAM,CAAC2F,WADhB;QAEE,OAAO,EAAE,KAAK1D,mBAFhB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAGE,oBAAC,IAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,oBAAC,IAAD;QAAM,KAAK,EAAEjC,MAAM,CAAC4F,eAApB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,OADF,CAHF,CADF,EAQE,oBAAC,UAAD;QACE,KAAK,EAAE5F,MAAM,CAAC6F,gBADhB;QAEE,GAAG,EAAE,aAAAC,SAAS;UAAA,OAAK,MAAI,CAAChE,iBAAL,GAAyBgE,SAA9B;QAAA,CAFhB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAGGZ,OAHH,CARF,CADF;IAgBD;;;WAoCD,mBAAUa,KAAV,EAA+B;MAC7B,KAAK7D,QAAL,CAAc;QAACxC,WAAW,EAAEqG;MAAd,CAAd,EAAoC,KAAKlE,kBAAzC;IACD;;;WAeD,iCAAwB/B,KAAxB,EAA+C;MAC7C,IAAIA,KAAK,KAAKxB,SAAd,EAAyB;QACvB,OAAO,CAAC,CAAR;MACD;;MACD,IAAMkE,QAAQ,GAAG,KAAKhD,SAAL,CAAeM,KAAf,CAAjB;;MACA,IAAI0C,QAAQ,KAAKlE,SAAjB,EAA4B;QAC1B,OAAO,CAAC,CAAR;MACD,CAFD,MAEO;QACL,OAAOkE,QAAP;MACD;IACF;;;WAED,kBAAqB;MACnB,kBAAgC,KAAK/C,KAArC;MAAA,IAAOE,QAAP,eAAOA,QAAP;MAAA,IAAiBD,WAAjB,eAAiBA,WAAjB;MAEA,OACE,oBAAC,IAAD;QAAM,KAAK,EAAEM,MAAM,CAACgG,SAApB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACGtG,WAAW,IAAI,IAAf,IAAuB,KAAKuG,iBAAL,CAAuBvG,WAAvB,CAD1B,EAEE,oBAAC,IAAD;QAAM,KAAK,EAAEM,MAAM,CAACkG,aAApB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACGvG,QAAQ,CAAClB,MAAT,GAAkB,CAAlB,IACC,oBAAC,IAAD;QAAM,KAAK,EAAEuB,MAAM,CAACC,QAApB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,oBAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACmG,gBAApB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,oBAAC,IAAD;QAAM,KAAK,EAAEnG,MAAM,CAACU,QAApB;QAA8B,aAAa,EAAE,CAA7C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,SADF,CADF,EAME,oBAAC,IAAD;QAAM,KAAK,EAAEV,MAAM,CAACoG,mBAApB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,oBAAC,IAAD;QAAM,KAAK,EAAEpG,MAAM,CAACU,QAApB;QAA8B,aAAa,EAAE,CAA7C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,UADF,CANF,CAFJ,CAFF,EAmBE,oBAAC,QAAD;QACE,GAAG,EAAE,KAAKS,wBADZ;QAEE,QAAQ,EAAE,KAAKE,yBAFjB;QAGE,KAAK,EAAErB,MAAM,CAACqG,QAHhB;QAIE,IAAI,EAAE1G,QAJR;QAKE,UAAU,EAAE,KAAKC,WALnB;QAME,YAAY,EAAEb,YANhB;QAOE,SAAS,EAAE,KAAKU,KAPlB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAnBF,CADF;IA+BD;;;;EAtZ0B/B,KAAK,CAAC4I,S;;AAyZnC,IAAMtG,MAAM,GAAGpC,UAAU,CAAC2I,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IACTQ,UAAU,EAAE,EADH;IAETC,aAAa,EAAE,EAFN;IAGTC,WAAW,EAAE,CAHJ;IAITC,YAAY,EAAE;EAJL,CADoB;EAO/BT,aAAa,EAAE;IACbvE,MAAM,EAAE;EADK,CAPgB;EAU/B0E,QAAQ,EAAE;IACRO,IAAI,EAAE,CADE;IAERjF,MAAM,EAAE;EAFA,CAVqB;EAc/B1B,QAAQ,EAAE;IACR4G,aAAa,EAAE,KADP;IAERD,IAAI,EAAE,CAFE;IAGRjF,MAAM,EAAEzD;EAHA,CAdqB;EAmB/BiC,YAAY,EAAE;IACZ2G,eAAe,EAAE;EADL,CAnBiB;EAsB/B5G,WAAW,EAAE;IACX4G,eAAe,EAAE;EADN,CAtBkB;EAyB/B1G,eAAe,EAAE;IACf0G,eAAe,EAAE;EADF,CAzBc;EA4B/BpG,QAAQ,EAAE;IACRqG,KAAK,EAAE,OADC;IAERC,QAAQ,EAAE;EAFF,CA5BqB;EAgC/BZ,mBAAmB,EAAE;IACnBzE,MAAM,EAAE,EADW;IAEnBsF,WAAW,EAAE,SAFM;IAGnBC,cAAc,EAAE,CAHG;IAInBC,iBAAiB,EAAE,CAJA;IAKnBC,gBAAgB,EAAE,CALC;IAMnBC,UAAU,EAAE,QANO;IAOnBC,cAAc,EAAE,QAPG;IAQnBR,eAAe,EAAE,MARE;IASnBF,IAAI,EAAE;EATa,CAhCU;EA2C/BT,gBAAgB,EAAE;IAChBxE,MAAM,EAAE,EADQ;IAEhBsF,WAAW,EAAE,SAFG;IAGhBC,cAAc,EAAE,CAHA;IAIhBC,iBAAiB,EAAE,CAJH;IAKhBI,eAAe,EAAE,CALD;IAMhBH,gBAAgB,EAAE,CANF;IAOhBE,cAAc,EAAE,QAPA;IAQhBR,eAAe,EAAE,MARD;IAShBF,IAAI,EAAE,CATU;IAUhBF,WAAW,EAAE;EAVG,CA3Ca;EAuD/BlG,cAAc,EAAE;IACdmB,MAAM,EAAE,EADM;IAEdsF,WAAW,EAAE,SAFC;IAGdG,gBAAgB,EAAE,CAHJ;IAIdC,UAAU,EAAE,QAJE;IAKdC,cAAc,EAAE,QALF;IAMdV,IAAI,EAAE;EANQ,CAvDe;EA+D/BtG,WAAW,EAAE;IACXqB,MAAM,EAAE,EADG;IAEXsF,WAAW,EAAE,SAFF;IAGXM,eAAe,EAAE,CAHN;IAIXH,gBAAgB,EAAE,CAJP;IAKXE,cAAc,EAAE,QALL;IAMXV,IAAI,EAAE,CANK;IAOXF,WAAW,EAAE;EAPF,CA/DkB;EAwE/Bb,gBAAgB,EAAE;IAChBe,IAAI,EAAE,CADU;IAEhBjF,MAAM,EAAE,GAFQ;IAGhB6F,SAAS,EAAE,CAHK;IAIhBC,YAAY,EAAE;EAJE,CAxEa;EA8E/BhC,iBAAiB,EAAE;IACjBmB,IAAI,EAAE;EADW,CA9EY;EAiF/BlB,mBAAmB,EAAE;IACnBkB,IAAI,EAAE;EADa,CAjFU;EAoF/BrB,aAAa,EAAE;IACbsB,aAAa,EAAE,KADF;IAEba,iBAAiB,EAAE;EAFN,CApFgB;EAwF/BlC,cAAc,EAAE;IACduB,KAAK,EAAE,OADO;IAEdC,QAAQ,EAAE;EAFI,CAxFe;EA4F/BpB,eAAe,EAAE;IACfmB,KAAK,EAAE,OADQ;IAEfC,QAAQ,EAAE;EAFK,CA5Fc;EAgG/BrB,WAAW,EAAE;IACX6B,SAAS,EAAE,CADA;IAEXV,eAAe,EAAE,MAFN;IAGXQ,cAAc,EAAE,QAHL;IAIXD,UAAU,EAAE;EAJD;AAhGkB,CAAlB,CAAf;AAwGAM,MAAM,CAACC,OAAP,GAAiB1I,cAAjB"},"metadata":{},"sourceType":"script"}