{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getFriends, sendInvite } from \"../../core/api/API\";\nimport Checkbox from \"../../assets/checkBox\";\nimport { stylesFriend } from \"../../assets/stylesFriends\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar GetFriends = function GetFriends(isModal) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      friends = _useState6[0],\n      setFriends = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      friendsArrLen = _useState10[0],\n      setFriendsArrLen = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      friendsCheckedList = _useState12[0],\n      setFriendsCheckedList = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isShowButton = _useState14[0],\n      setIsShowButton = _useState14[1];\n\n  useEffect(function () {\n    console.log(\"get friends 1\");\n\n    var loadData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        console.log(\"get friends 2\");\n        getFriends().then(function (response) {\n          console.log(\"response get f\");\n          console.log(response);\n\n          if (response === 1) {\n            setMessage(\"You don't have friends\");\n          } else if (response === 0) {\n            setMessage(\"Error\");\n          } else {\n            setFriends(response);\n          }\n\n          setIsLoaded(true);\n        }).catch(function (error) {\n          setError(error);\n        });\n      });\n\n      return function loadData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    loadData();\n  }, []);\n  useEffect(function () {\n    if (friendsArrLen != 0) {\n      setIsShowButton(true);\n    } else {\n      setIsShowButton(false);\n    }\n\n    console.log(friendsCheckedList);\n  }, [friendsArrLen]);\n\n  function selectUser(id) {\n    var itemIndex = friendsCheckedList.indexOf(id);\n\n    if (itemIndex !== -1) {\n      friendsCheckedList.splice(itemIndex, 1);\n      setFriendsCheckedList(friendsCheckedList);\n      setFriendsArrLen(friendsArrLen - 1);\n    } else {\n      friendsCheckedList.push(id);\n      setFriendsCheckedList(friendsCheckedList);\n      setFriendsArrLen(friendsArrLen + 1);\n    }\n  }\n\n  var sendInviteHandler = function sendInviteHandler(e) {\n    e.preventDefault();\n    sendInvite(friendsCheckedList).then(function (response) {\n      console.log(response);\n    });\n  };\n\n  return _jsxs(View, {\n    children: [isShowButton && _jsx(TouchableOpacity, {\n      style: stylesModalWindowButton.button,\n      onPress: sendInviteHandler,\n      children: _jsx(Text, {\n        style: stylesModalWindowButton.buttonInviteText,\n        children: \"send invite\"\n      })\n    }), isLoaded ? message ? _jsx(View, {\n      children: \"message\"\n    }) : _jsx(View, {\n      children: isModal.isModal == true ? friends.map(function (item) {\n        return _jsx(View, {\n          style: stylesFriend.friendsList,\n          children: _jsx(Checkbox, {\n            onPress: function onPress() {\n              selectUser(item.id);\n            },\n            friendsArr: friendsCheckedList,\n            friendsArrLen: friendsArrLen,\n            title: item.email,\n            friendId: item.id\n          })\n        });\n      }) : friends.map(function (item) {\n        return _jsx(View, {\n          style: stylesFriend.friendsList,\n          children: _jsx(Text, {\n            children: item.email\n          })\n        });\n      })\n    }) : _jsx(View, {\n      children: error\n    })]\n  });\n};\n\nvar stylesModalWindowButton = StyleSheet.create({\n  button: {\n    zIndex: 2,\n    backgroundColor: 'fff',\n    border: '3px solid #9d0cff',\n    borderRadius: '15px',\n    boxSizing: 'borderBox',\n    minWidth: '30px',\n    fontSize: '20px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonInviteText: {\n    padding: '10px',\n    color: '#000',\n    fontSize: '30px'\n  }\n});\nexport default GetFriends;","map":{"version":3,"names":["React","useEffect","useState","getFriends","sendInvite","Checkbox","stylesFriend","GetFriends","isModal","isLoaded","setIsLoaded","message","setMessage","friends","setFriends","error","setError","friendsArrLen","setFriendsArrLen","friendsCheckedList","setFriendsCheckedList","isShowButton","setIsShowButton","console","log","loadData","then","response","catch","selectUser","id","itemIndex","indexOf","splice","push","sendInviteHandler","e","preventDefault","stylesModalWindowButton","button","buttonInviteText","map","item","friendsList","email","StyleSheet","create","zIndex","backgroundColor","border","borderRadius","boxSizing","minWidth","fontSize","display","justifyContent","alignItems","padding","color"],"sources":["/Users/apple/Documents/Programming/barBandNew/mobile/screens/friends/getFriends.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {View, Text, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {getFriends, sendInvite} from \"../../core/api/API\";\r\nimport Checkbox from \"../../assets/checkBox\"\r\nimport {stylesFriend} from \"../../assets/stylesFriends\";\r\n\r\n\r\nconst GetFriends = (isModal) => {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [message, setMessage] = useState(null)\r\n    const [friends, setFriends] = useState([]);\r\n    const [error, setError] = useState(null)\r\n    const [friendsArrLen, setFriendsArrLen] = useState(0)\r\n    const [friendsCheckedList, setFriendsCheckedList] = useState([])\r\n    const [isShowButton, setIsShowButton] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log(\"get friends 1\")\r\n        const loadData = async () => {\r\n            console.log(\"get friends 2\")\r\n            getFriends().then((response) => {\r\n                console.log(\"response get f\")\r\n                console.log(response)\r\n                if (response === 1) {\r\n                    setMessage(\"You don't have friends\")\r\n                } else if (response === 0) {\r\n                    setMessage(\"Error\")\r\n                } else {\r\n                    setFriends(response)\r\n                }\r\n                setIsLoaded(true)\r\n            }).catch(error => {\r\n                setError(error);\r\n            })\r\n        }\r\n       loadData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(friendsArrLen!=0){\r\n            setIsShowButton(true)\r\n        } else {\r\n            setIsShowButton(false)\r\n        }\r\n        console.log(friendsCheckedList)\r\n    }, [friendsArrLen])\r\n\r\n    function selectUser(id) {\r\n        let itemIndex = friendsCheckedList.indexOf(id)\r\n        if(itemIndex !== -1) {\r\n            friendsCheckedList.splice(itemIndex, 1)\r\n            setFriendsCheckedList(friendsCheckedList)\r\n            setFriendsArrLen(friendsArrLen-1)\r\n        } else {\r\n            friendsCheckedList.push(id)\r\n            setFriendsCheckedList(friendsCheckedList)\r\n            setFriendsArrLen(friendsArrLen+1)\r\n        }\r\n    }\r\n\r\n    const sendInviteHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        sendInvite(friendsCheckedList).then((response) => {\r\n            console.log(response);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            {isShowButton &&\r\n            <TouchableOpacity style={stylesModalWindowButton.button} onPress={sendInviteHandler}>\r\n                <Text style={stylesModalWindowButton.buttonInviteText}>send invite</Text>\r\n            </TouchableOpacity>\r\n            }\r\n            {isLoaded ? message ? <View>message</View> :\r\n                    <View>\r\n                        {(isModal.isModal == true) ?\r\n                            friends.map((item) => (\r\n                                <View style={stylesFriend.friendsList}>\r\n                                     <Checkbox onPress={() => {selectUser(item.id)}}\r\n                                                         friendsArr={friendsCheckedList}\r\n                                                         friendsArrLen={friendsArrLen}\r\n                                                         title={item.email}\r\n                                                         friendId={item.id}\r\n                                    />\r\n                                </View>\r\n                            )) : friends.map((item) => (\r\n                                <View style={stylesFriend.friendsList}>\r\n                                    <Text>{item.email}</Text>\r\n                                </View>\r\n                            ))\r\n                        }\r\n                    </View>\r\n                : <View>{error}</View>}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst stylesModalWindowButton = StyleSheet.create({\r\n    button: {\r\n        zIndex: 2,\r\n        backgroundColor:'fff',\r\n        border: '3px solid #9d0cff',\r\n        borderRadius: '15px',\r\n        boxSizing: 'borderBox',\r\n        minWidth: '30px',\r\n        fontSize:'20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    buttonInviteText:{\r\n        padding: '10px',\r\n        color: '#000',\r\n        fontSize: '30px'\r\n    }\r\n})\r\n\r\nexport default GetFriends\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}