{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar urlAPI = 'http://localhost:5000';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar getAccessToken = function getAccessToken() {\n  var value;\n  return _regeneratorRuntime.async(function getAccessToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('accessToken'));\n\n        case 3:\n          value = _context.sent;\n\n          if (!(value !== null)) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", value);\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar getId = function getId() {\n  var value;\n  return _regeneratorRuntime.async(function getId$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('userId'));\n\n        case 3:\n          value = _context2.sent;\n\n          if (!(value !== null)) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", value);\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nexport var requestGetFriends = function requestGetFriends() {\n  var response;\n  return _regeneratorRuntime.async(function requestGetFriends$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetch(urlAPI + \"/getFriends\"));\n\n        case 2:\n          response = _context3.sent;\n\n          if (!response.ok) {\n            _context3.next = 9;\n            break;\n          }\n\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 9:\n          console.log(response);\n          return _context3.abrupt(\"return\", 0);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var sendRequest = function sendRequest(userReceiverID) {\n  var userSenderID, token, isAuth, res;\n  return _regeneratorRuntime.async(function sendRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(getId());\n\n        case 2:\n          userSenderID = _context4.sent;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(getAccessToken());\n\n        case 5:\n          token = _context4.sent;\n          _context4.next = 8;\n          return _regeneratorRuntime.awrap(onLoggedIn(token));\n\n        case 8:\n          isAuth = _context4.sent;\n          _context4.next = 11;\n          return _regeneratorRuntime.awrap(fetch(urlAPI + \"/sendRequest\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({\n              userSender: userSenderID,\n              userReceiver: userReceiverID\n            })\n          }));\n\n        case 11:\n          res = _context4.sent;\n\n          if (!res.ok) {\n            _context4.next = 17;\n            break;\n          }\n\n          if (!isAuth) {\n            _context4.next = 17;\n            break;\n          }\n\n          _context4.next = 16;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 16:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var requestFindFriends = function requestFindFriends(emailUser) {\n  var token, isAuth, res;\n  return _regeneratorRuntime.async(function requestFindFriends$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(getAccessToken());\n\n        case 2:\n          token = _context5.sent;\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(onLoggedIn(token));\n\n        case 5:\n          isAuth = _context5.sent;\n          _context5.next = 8;\n          return _regeneratorRuntime.awrap(fetch(urlAPI + \"/findFriend\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({\n              email: emailUser\n            })\n          }));\n\n        case 8:\n          res = _context5.sent;\n\n          if (!res.ok) {\n            _context5.next = 14;\n            break;\n          }\n\n          if (!isAuth) {\n            _context5.next = 14;\n            break;\n          }\n\n          _context5.next = 13;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 13:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var onLoggedIn = function onLoggedIn(token) {\n  var response, jsonRes;\n  return _regeneratorRuntime.async(function onLoggedIn$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(fetch(urlAPI + \"/private\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8',\n              'Authorization': \"Bearer \" + token\n            }\n          }));\n\n        case 2:\n          response = _context6.sent;\n\n          if (!response.ok) {\n            _context6.next = 15;\n            break;\n          }\n\n          _context6.prev = 4;\n          _context6.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          jsonRes = _context6.sent;\n          console.log(jsonRes);\n          return _context6.abrupt(\"return\", jsonRes.checkAuth);\n\n        case 12:\n          _context6.prev = 12;\n          _context6.t0 = _context6[\"catch\"](4);\n          console.log(_context6.t0);\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[4, 12]], Promise);\n};","map":{"version":3,"names":["urlAPI","AsyncStorage","getAccessToken","getItem","value","console","log","getId","requestGetFriends","fetch","response","ok","json","sendRequest","userReceiverID","userSenderID","token","onLoggedIn","isAuth","method","headers","body","JSON","stringify","userSender","userReceiver","res","requestFindFriends","emailUser","email","jsonRes","checkAuth"],"sources":["D:/проекты летом 2022/work2/barband/mobile/core/api/API.js"],"sourcesContent":["const urlAPI = 'http://localhost:5000'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst getAccessToken = async () => {\r\n   try {\r\n      const value = await AsyncStorage.getItem('accessToken');\r\n      if(value !== null) {\r\n         return value;\r\n      }\r\n   } catch(e) {\r\n      console.log(e);\r\n   }\r\n}\r\n\r\nconst getId = async () => {\r\n   try {\r\n      const value = await AsyncStorage.getItem('userId');\r\n      if(value !== null) {\r\n         return value;\r\n      }\r\n   } catch(e) {\r\n      console.log(e);\r\n   }\r\n}\r\n\r\nexport const requestGetFriends = async () => {\r\n   let response = await fetch(`${urlAPI}/getFriends`);\r\n   if (response.ok) {\r\n      return await response.json();\r\n   } else {\r\n      console.log(response);\r\n      return 0;\r\n   }\r\n}\r\n\r\nexport const sendRequest = async (userReceiverID) => {\r\n   const userSenderID = await getId();\r\n   const token = await getAccessToken();\r\n   const isAuth = await onLoggedIn(token);\r\n   let res = await fetch(`${urlAPI}/sendRequest`, {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify({userSender: userSenderID, userReceiver: userReceiverID})\r\n   })\r\n   if (res.ok) {\r\n      if(isAuth) {\r\n         return await res.json();\r\n      }\r\n   }\r\n}\r\n\r\nexport const requestFindFriends = async (emailUser) => {\r\n   const token = await getAccessToken();\r\n   const isAuth = await onLoggedIn(token);\r\n   let res = await fetch(`${urlAPI}/findFriend`, {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify({email: emailUser})\r\n   })\r\n   if (res.ok) {\r\n      if(isAuth){\r\n         return await res.json();\r\n      }\r\n   }\r\n}\r\n\r\nexport const onLoggedIn = async (token) => {\r\n   let response = await fetch(`${urlAPI}/private`, {\r\n      method: 'GET',\r\n      headers: {\r\n         'Content-Type': 'application/json;charset=utf-8',\r\n         'Authorization': `Bearer ${token}`,\r\n      },\r\n   })\r\n   if (response.ok) {\r\n      try {\r\n         const jsonRes = await response.json();\r\n         console.log(jsonRes);\r\n         return jsonRes.checkAuth;\r\n      } catch (err) {\r\n         console.log(err);\r\n      }\r\n   }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}