{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B \\u043B\\u0435\\u0442\\u043E\\u043C 2022\\\\work2\\\\barband\\\\mobile\\\\screens\\\\FriendsScreen.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { FlatList } from \"react-native-gesture-handler\";\n\nvar FriendsScreen = function FriendsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var buttonBackHandler = function buttonBackHandler() {\n    navigation.navigate('MainScreen');\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReadyToLoad = _useState2[0],\n      setIsReadyToLoad = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoaded = _useState8[0],\n      setIsLoaded = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      items = _useState10[0],\n      setItems = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isSelected = _useState12[0],\n      setSelection = _useState12[1];\n\n  useEffect(function () {\n    fetch(\"http://localhost:5000/addFriend\").then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (\"error\" in result) {\n        setIsLoaded(true);\n        setError(result.error);\n      } else if (\"message\" in result) {\n        setIsLoaded(true);\n        setMessage(result.message);\n      } else {\n        setIsLoaded(true);\n        setItems(result);\n        setIsReadyToLoad(true);\n        console.log(result);\n      }\n    });\n  }, []);\n  return React.createElement(View, {\n    style: stylesFriend.Friend,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Friends Page\"), React.createElement(TouchableOpacity, {\n    style: stylesFriend.buttonFriends,\n    onPress: buttonBackHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: stylesFriend.buttonFriendText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Back to main page\")), React.createElement(FlatList, {\n    renderItem: function renderItem() {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 39\n        }\n      }, items.name);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }));\n};\n\nvar stylesFriend = StyleSheet.create({\n  Friend: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonFriends: {\n    backgroundColor: '#0051ff',\n    padding: '10px',\n    height: '70px',\n    width: '70px',\n    borderRadius: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonFriendText: {\n    color: '#ffffff'\n  },\n  checkbox: {\n    alignSelf: \"center\"\n  }\n});\nexport default FriendsScreen;","map":{"version":3,"names":["React","useEffect","useState","FlatList","FriendsScreen","navigation","buttonBackHandler","navigate","isReadyToLoad","setIsReadyToLoad","error","setError","message","setMessage","isLoaded","setIsLoaded","items","setItems","isSelected","setSelection","fetch","then","res","json","result","console","log","stylesFriend","Friend","buttonFriends","buttonFriendText","name","StyleSheet","create","display","flexDirection","width","height","justifyContent","alignItems","backgroundColor","padding","borderRadius","color","checkbox","alignSelf"],"sources":["D:/проекты летом 2022/work2/barband/mobile/screens/FriendsScreen.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {StyleSheet, View, Text, Button, TouchableOpacity, CheckBox} from \"react-native\";\r\nimport {FlatList} from \"react-native-gesture-handler\";\r\n\r\nconst FriendsScreen = ({navigation}) => {\r\n    const buttonBackHandler = () => {\r\n        navigation.navigate('MainScreen');\r\n    }\r\n\r\n    const [isReadyToLoad, setIsReadyToLoad] = useState(false)\r\n    const [error, setError] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const [isSelected, setSelection] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/addFriend\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (\"error\" in result) {\r\n                        setIsLoaded(true);\r\n                        setError(result.error);\r\n                    } else if (\"message\" in result) {\r\n                        setIsLoaded(true);\r\n                        setMessage(result.message);\r\n                    } else {\r\n                        setIsLoaded(true);\r\n                        setItems(result);\r\n                        setIsReadyToLoad(true);\r\n                        console.log(result);\r\n                    }\r\n                },\r\n            )\r\n    }, [])\r\n\r\n  /* if (error) {\r\n        return <View><Text>Ошибка: {error}</Text></View>;\r\n    } else if (!isLoaded) {\r\n        return <View><Text>Загрузка...</Text></View>;\r\n    } else if(message) {\r\n        return <View><Text>Сообщение: {message}</Text></View>;\r\n    } else {*/\r\n        return (\r\n            <View style={stylesFriend.Friend}>\r\n                <Text>Friends Page</Text>\r\n                <TouchableOpacity style={stylesFriend.buttonFriends} onPress={buttonBackHandler}>\r\n                    <Text style={stylesFriend.buttonFriendText}>Back to main page</Text>\r\n                </TouchableOpacity>\r\n                <FlatList\r\n                    renderItem={() => <Text>{items.name}</Text>}\r\n                    />\r\n            </View>\r\n        );\r\n    //}\r\n}\r\n\r\nconst stylesFriend = StyleSheet.create({\r\n    Friend:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    buttonFriends:{\r\n        backgroundColor:'#0051ff',\r\n        padding: '10px',\r\n        height: '70px',\r\n        width: '70px',\r\n        borderRadius:'50%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    buttonFriendText:{\r\n        color:'#ffffff'\r\n    },\r\n    checkbox: {\r\n        alignSelf: \"center\",\r\n    }\r\n})\r\n\r\nexport default FriendsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}