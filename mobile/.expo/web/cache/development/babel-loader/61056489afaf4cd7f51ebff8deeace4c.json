{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport UTFSequence from \"../../UTFSequence\";\nimport stringifySafe from \"../../Utilities/stringifySafe\";\nvar BABEL_TRANSFORM_ERROR_FORMAT = /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/;\nvar BABEL_CODE_FRAME_ERROR_FORMAT = /^(?:TransformError )?(?:(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*):? (?:(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*?)(\\/(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*): ((?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+?)\\n([ >]{2}[\\t-\\r 0-9\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+ \\|(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+|\\x1B(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)/;\nvar METRO_ERROR_FORMAT = /^(?:InternalError Metro has encountered an error:) ((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*): ((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*) \\(([0-9]+):([0-9]+)\\)\\n\\n((?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)/;\nvar SUBSTITUTION = UTFSequence.BOM + '%s';\nexport function parseInterpolation(args) {\n  var categoryParts = [];\n  var contentParts = [];\n  var substitutionOffsets = [];\n\n  var remaining = _toConsumableArray(args);\n\n  if (typeof remaining[0] === 'string') {\n    var formatString = String(remaining.shift());\n    var formatStringParts = formatString.split('%s');\n    var substitutionCount = formatStringParts.length - 1;\n    var substitutions = remaining.splice(0, substitutionCount);\n    var categoryString = '';\n    var contentString = '';\n    var substitutionIndex = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(formatStringParts), _step; !(_step = _iterator()).done;) {\n      var formatStringPart = _step.value;\n      categoryString += formatStringPart;\n      contentString += formatStringPart;\n\n      if (substitutionIndex < substitutionCount) {\n        if (substitutionIndex < substitutions.length) {\n          var substitution = typeof substitutions[substitutionIndex] === 'string' ? substitutions[substitutionIndex] : stringifySafe(substitutions[substitutionIndex]);\n          substitutionOffsets.push({\n            length: substitution.length,\n            offset: contentString.length\n          });\n          categoryString += SUBSTITUTION;\n          contentString += substitution;\n        } else {\n          substitutionOffsets.push({\n            length: 2,\n            offset: contentString.length\n          });\n          categoryString += '%s';\n          contentString += '%s';\n        }\n\n        substitutionIndex++;\n      }\n    }\n\n    categoryParts.push(categoryString);\n    contentParts.push(contentString);\n  }\n\n  var remainingArgs = remaining.map(function (arg) {\n    return typeof arg === 'string' ? arg : stringifySafe(arg);\n  });\n  categoryParts.push.apply(categoryParts, _toConsumableArray(remainingArgs));\n  contentParts.push.apply(contentParts, _toConsumableArray(remainingArgs));\n  return {\n    category: categoryParts.join(' '),\n    message: {\n      content: contentParts.join(' '),\n      substitutions: substitutionOffsets\n    }\n  };\n}\nexport function parseComponentStack(message) {\n  return message.split(/\\n {4}in /g).map(function (s) {\n    if (!s) {\n      return null;\n    }\n\n    var match = s.match(/(.*) \\(at (.*\\.js):([\\d]+)\\)/);\n\n    if (!match) {\n      return null;\n    }\n\n    var _match$slice = match.slice(1),\n        _match$slice2 = _slicedToArray(_match$slice, 3),\n        content = _match$slice2[0],\n        fileName = _match$slice2[1],\n        row = _match$slice2[2];\n\n    return {\n      content: content,\n      fileName: fileName,\n      location: {\n        column: -1,\n        row: parseInt(row, 10)\n      }\n    };\n  }).filter(Boolean);\n}\nexport function parseLogBoxException(error) {\n  var message = error.originalMessage != null ? error.originalMessage : 'Unknown';\n  var metroInternalError = message.match(METRO_ERROR_FORMAT);\n\n  if (metroInternalError) {\n    var _metroInternalError$s = metroInternalError.slice(1),\n        _metroInternalError$s2 = _slicedToArray(_metroInternalError$s, 5),\n        content = _metroInternalError$s2[0],\n        fileName = _metroInternalError$s2[1],\n        row = _metroInternalError$s2[2],\n        column = _metroInternalError$s2[3],\n        codeFrame = _metroInternalError$s2[4];\n\n    return {\n      level: 'fatal',\n      type: 'Metro Error',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName: fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10)\n        },\n        content: codeFrame\n      },\n      message: {\n        content: content,\n        substitutions: []\n      },\n      category: fileName + \"-\" + row + \"-\" + column\n    };\n  }\n\n  var babelTransformError = message.match(BABEL_TRANSFORM_ERROR_FORMAT);\n\n  if (babelTransformError) {\n    var _babelTransformError$ = babelTransformError.slice(1),\n        _babelTransformError$2 = _slicedToArray(_babelTransformError$, 5),\n        _fileName = _babelTransformError$2[0],\n        _content = _babelTransformError$2[1],\n        _row = _babelTransformError$2[2],\n        _column = _babelTransformError$2[3],\n        _codeFrame = _babelTransformError$2[4];\n\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName: _fileName,\n        location: {\n          row: parseInt(_row, 10),\n          column: parseInt(_column, 10)\n        },\n        content: _codeFrame\n      },\n      message: {\n        content: _content,\n        substitutions: []\n      },\n      category: _fileName + \"-\" + _row + \"-\" + _column\n    };\n  }\n\n  var babelCodeFrameError = message.match(BABEL_CODE_FRAME_ERROR_FORMAT);\n\n  if (babelCodeFrameError) {\n    var _babelCodeFrameError$ = babelCodeFrameError.slice(1),\n        _babelCodeFrameError$2 = _slicedToArray(_babelCodeFrameError$, 3),\n        _fileName2 = _babelCodeFrameError$2[0],\n        _content2 = _babelCodeFrameError$2[1],\n        _codeFrame2 = _babelCodeFrameError$2[2];\n\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName: _fileName2,\n        location: null,\n        content: _codeFrame2\n      },\n      message: {\n        content: _content2,\n        substitutions: []\n      },\n      category: _fileName2 + \"-\" + 1 + \"-\" + 1\n    };\n  }\n\n  if (message.match(/^TransformError /)) {\n    return {\n      level: 'syntax',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: [],\n      message: {\n        content: message,\n        substitutions: []\n      },\n      category: message\n    };\n  }\n\n  var componentStack = error.componentStack;\n\n  if (error.isFatal || error.isComponentError) {\n    return _objectSpread({\n      level: 'fatal',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: componentStack != null ? parseComponentStack(componentStack) : []\n    }, parseInterpolation([message]));\n  }\n\n  if (componentStack != null) {\n    return _objectSpread({\n      level: 'error',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: parseComponentStack(componentStack)\n    }, parseInterpolation([message]));\n  }\n\n  return _objectSpread({\n    level: 'error',\n    stack: error.stack,\n    isComponentError: error.isComponentError\n  }, parseLogBoxLog([message]));\n}\nexport function parseLogBoxLog(args) {\n  var message = args[0];\n  var argsWithoutComponentStack = [];\n  var componentStack = [];\n\n  if (typeof message === 'string' && message.slice(-2) === '%s' && args.length > 0) {\n    var lastArg = args[args.length - 1];\n\n    if (typeof lastArg === 'string' && /\\s{4}in/.test(lastArg)) {\n      argsWithoutComponentStack = args.slice(0, -1);\n      argsWithoutComponentStack[0] = message.slice(0, -2);\n      componentStack = parseComponentStack(lastArg);\n    }\n  }\n\n  if (componentStack.length === 0) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(args), _step2; !(_step2 = _iterator2()).done;) {\n      var arg = _step2.value;\n\n      if (typeof arg === 'string' && /\\n {4}in /.exec(arg)) {\n        var messageEndIndex = arg.indexOf('\\n    in ');\n\n        if (messageEndIndex > 0) {\n          argsWithoutComponentStack.push(arg.slice(0, messageEndIndex));\n        }\n\n        componentStack = parseComponentStack(arg);\n      } else {\n        argsWithoutComponentStack.push(arg);\n      }\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, parseInterpolation(argsWithoutComponentStack)), {}, {\n    componentStack: componentStack\n  });\n}","map":{"version":3,"names":["UTFSequence","stringifySafe","BABEL_TRANSFORM_ERROR_FORMAT","BABEL_CODE_FRAME_ERROR_FORMAT","METRO_ERROR_FORMAT","SUBSTITUTION","BOM","parseInterpolation","args","categoryParts","contentParts","substitutionOffsets","remaining","formatString","String","shift","formatStringParts","split","substitutionCount","length","substitutions","splice","categoryString","contentString","substitutionIndex","formatStringPart","substitution","push","offset","remainingArgs","map","arg","category","join","message","content","parseComponentStack","s","match","slice","fileName","row","location","column","parseInt","filter","Boolean","parseLogBoxException","error","originalMessage","metroInternalError","codeFrame","level","type","stack","isComponentError","componentStack","babelTransformError","babelCodeFrameError","isFatal","parseLogBoxLog","argsWithoutComponentStack","lastArg","test","exec","messageEndIndex","indexOf"],"sources":["D:/проекты летом 2022/loginapp2/mobile/node_modules/react-native/Libraries/LogBox/Data/parseLogBoxLog.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport UTFSequence from '../../UTFSequence';\nimport stringifySafe from '../../Utilities/stringifySafe';\nimport type {ExceptionData} from '../../Core/NativeExceptionsManager';\nimport type {LogBoxLogData} from './LogBoxLog';\n\nconst BABEL_TRANSFORM_ERROR_FORMAT = /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/;\nconst BABEL_CODE_FRAME_ERROR_FORMAT = /^(?:TransformError )?(?:.*):? (?:.*?)(\\/.*): ([\\s\\S]+?)\\n([ >]{2}[\\d\\s]+ \\|[\\s\\S]+|\\u{001b}[\\s\\S]+)/u;\nconst METRO_ERROR_FORMAT = /^(?:InternalError Metro has encountered an error:) (.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/u;\n\nexport type ExtendedExceptionData = ExceptionData & {\n  isComponentError: boolean,\n  ...\n};\nexport type Category = string;\nexport type CodeFrame = $ReadOnly<{|\n  content: string,\n  location: ?{\n    row: number,\n    column: number,\n    ...\n  },\n  fileName: string,\n|}>;\nexport type Message = $ReadOnly<{|\n  content: string,\n  substitutions: $ReadOnlyArray<\n    $ReadOnly<{|\n      length: number,\n      offset: number,\n    |}>,\n  >,\n|}>;\n\nexport type ComponentStack = $ReadOnlyArray<CodeFrame>;\n\nconst SUBSTITUTION = UTFSequence.BOM + '%s';\n\nexport function parseInterpolation(\n  args: $ReadOnlyArray<mixed>,\n): $ReadOnly<{|\n  category: Category,\n  message: Message,\n|}> {\n  const categoryParts = [];\n  const contentParts = [];\n  const substitutionOffsets = [];\n\n  const remaining = [...args];\n  if (typeof remaining[0] === 'string') {\n    const formatString = String(remaining.shift());\n    const formatStringParts = formatString.split('%s');\n    const substitutionCount = formatStringParts.length - 1;\n    const substitutions = remaining.splice(0, substitutionCount);\n\n    let categoryString = '';\n    let contentString = '';\n\n    let substitutionIndex = 0;\n    for (const formatStringPart of formatStringParts) {\n      categoryString += formatStringPart;\n      contentString += formatStringPart;\n\n      if (substitutionIndex < substitutionCount) {\n        if (substitutionIndex < substitutions.length) {\n          // Don't stringify a string type.\n          // It adds quotation mark wrappers around the string,\n          // which causes the LogBox to look odd.\n          const substitution =\n            typeof substitutions[substitutionIndex] === 'string'\n              ? substitutions[substitutionIndex]\n              : stringifySafe(substitutions[substitutionIndex]);\n          substitutionOffsets.push({\n            length: substitution.length,\n            offset: contentString.length,\n          });\n\n          categoryString += SUBSTITUTION;\n          contentString += substitution;\n        } else {\n          substitutionOffsets.push({\n            length: 2,\n            offset: contentString.length,\n          });\n\n          categoryString += '%s';\n          contentString += '%s';\n        }\n\n        substitutionIndex++;\n      }\n    }\n\n    categoryParts.push(categoryString);\n    contentParts.push(contentString);\n  }\n\n  const remainingArgs = remaining.map(arg => {\n    // Don't stringify a string type.\n    // It adds quotation mark wrappers around the string,\n    // which causes the LogBox to look odd.\n    return typeof arg === 'string' ? arg : stringifySafe(arg);\n  });\n  categoryParts.push(...remainingArgs);\n  contentParts.push(...remainingArgs);\n\n  return {\n    category: categoryParts.join(' '),\n    message: {\n      content: contentParts.join(' '),\n      substitutions: substitutionOffsets,\n    },\n  };\n}\n\nexport function parseComponentStack(message: string): ComponentStack {\n  return message\n    .split(/\\n {4}in /g)\n    .map(s => {\n      if (!s) {\n        return null;\n      }\n      const match = s.match(/(.*) \\(at (.*\\.js):([\\d]+)\\)/);\n      if (!match) {\n        return null;\n      }\n\n      let [content, fileName, row] = match.slice(1);\n      return {\n        content,\n        fileName,\n        location: {column: -1, row: parseInt(row, 10)},\n      };\n    })\n    .filter(Boolean);\n}\n\nexport function parseLogBoxException(\n  error: ExtendedExceptionData,\n): LogBoxLogData {\n  const message =\n    error.originalMessage != null ? error.originalMessage : 'Unknown';\n\n  const metroInternalError = message.match(METRO_ERROR_FORMAT);\n  if (metroInternalError) {\n    const [\n      content,\n      fileName,\n      row,\n      column,\n      codeFrame,\n    ] = metroInternalError.slice(1);\n\n    return {\n      level: 'fatal',\n      type: 'Metro Error',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10),\n        },\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${row}-${column}`,\n    };\n  }\n\n  const babelTransformError = message.match(BABEL_TRANSFORM_ERROR_FORMAT);\n  if (babelTransformError) {\n    // Transform errors are thrown from inside the Babel transformer.\n    const [\n      fileName,\n      content,\n      row,\n      column,\n      codeFrame,\n    ] = babelTransformError.slice(1);\n\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10),\n        },\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${row}-${column}`,\n    };\n  }\n\n  const babelCodeFrameError = message.match(BABEL_CODE_FRAME_ERROR_FORMAT);\n\n  if (babelCodeFrameError) {\n    // Codeframe errors are thrown from any use of buildCodeFrameError.\n    const [fileName, content, codeFrame] = babelCodeFrameError.slice(1);\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: null, // We are not given the location.\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${1}-${1}`,\n    };\n  }\n\n  if (message.match(/^TransformError /)) {\n    return {\n      level: 'syntax',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: [],\n      message: {\n        content: message,\n        substitutions: [],\n      },\n      category: message,\n    };\n  }\n\n  const componentStack = error.componentStack;\n  if (error.isFatal || error.isComponentError) {\n    return {\n      level: 'fatal',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack:\n        componentStack != null ? parseComponentStack(componentStack) : [],\n      ...parseInterpolation([message]),\n    };\n  }\n\n  if (componentStack != null) {\n    // It is possible that console errors have a componentStack.\n    return {\n      level: 'error',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: parseComponentStack(componentStack),\n      ...parseInterpolation([message]),\n    };\n  }\n\n  // Most `console.error` calls won't have a componentStack. We parse them like\n  // regular logs which have the component stack burried in the message.\n  return {\n    level: 'error',\n    stack: error.stack,\n    isComponentError: error.isComponentError,\n    ...parseLogBoxLog([message]),\n  };\n}\n\nexport function parseLogBoxLog(\n  args: $ReadOnlyArray<mixed>,\n): {|\n  componentStack: ComponentStack,\n  category: Category,\n  message: Message,\n|} {\n  const message = args[0];\n  let argsWithoutComponentStack = [];\n  let componentStack = [];\n\n  // Extract component stack from warnings like \"Some warning%s\".\n  if (\n    typeof message === 'string' &&\n    message.slice(-2) === '%s' &&\n    args.length > 0\n  ) {\n    const lastArg = args[args.length - 1];\n    // Does it look like React component stack? \"   in ...\"\n    if (typeof lastArg === 'string' && /\\s{4}in/.test(lastArg)) {\n      argsWithoutComponentStack = args.slice(0, -1);\n      argsWithoutComponentStack[0] = message.slice(0, -2);\n      componentStack = parseComponentStack(lastArg);\n    }\n  }\n\n  if (componentStack.length === 0) {\n    // Try finding the component stack elsewhere.\n    for (const arg of args) {\n      if (typeof arg === 'string' && /\\n {4}in /.exec(arg)) {\n        // Strip out any messages before the component stack.\n        const messageEndIndex = arg.indexOf('\\n    in ');\n        if (messageEndIndex > 0) {\n          argsWithoutComponentStack.push(arg.slice(0, messageEndIndex));\n        }\n\n        componentStack = parseComponentStack(arg);\n      } else {\n        argsWithoutComponentStack.push(arg);\n      }\n    }\n  }\n\n  return {\n    ...parseInterpolation(argsWithoutComponentStack),\n    componentStack,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}