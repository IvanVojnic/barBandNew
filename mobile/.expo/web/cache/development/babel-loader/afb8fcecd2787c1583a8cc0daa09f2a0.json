{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getNotificationChannelGroupsAsync() {\n  return _regeneratorRuntime.async(function getNotificationChannelGroupsAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        console.debug('Notification channels feature is only supported on Android.');\n        return _context.abrupt(\"return\", []);\n      case 2:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":";AAEA,eAAe,SAAeA,iCAAiC;EAAA;IAAA;MAAA;QAG7DC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;QAAC,iCACtE,EAAE;MAAA;MAAA;QAAA;IAAA;EAAA;AAAA","names":["getNotificationChannelGroupsAsync","console","debug"],"sourceRoot":"","sources":["../src/getNotificationChannelGroupsAsync.ts"],"sourcesContent":["import { NotificationChannelGroup } from './NotificationChannelGroupManager.types';\n\nexport default async function getNotificationChannelGroupsAsync(): Promise<\n  NotificationChannelGroup[]\n> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return [];\n}\n"]},"metadata":{},"sourceType":"module"}