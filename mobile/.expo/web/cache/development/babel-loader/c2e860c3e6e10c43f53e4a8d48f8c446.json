{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getRooms, acceptInvite } from \"../core/api/API\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Rooms = function Rooms(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rooms = _useState2[0],\n      setRooms = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRoomsLoaded = _useState4[0],\n      setIsRoomsLoaded = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      statusAccepted = _useState6[0],\n      setStatusAccepted = _useState6[1];\n\n  useEffect(function () {\n    getRooms().then(function () {\n      var _ref2 = _asyncToGenerator(function* (response) {\n        console.log(response);\n        yield setRooms(response.rooms);\n        console.log(rooms);\n        console.log(typeof rooms);\n        setIsRoomsLoaded(true);\n      });\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()).catch(function (e) {\n      console.log(e);\n    });\n  }, []);\n\n  var InviteSubmit = function InviteSubmit(roomId, status) {\n    console.log(roomId);\n    console.log(status);\n  };\n\n  return _jsx(View, {\n    children: _jsx(View, {\n      children: isRoomsLoaded && _jsx(View, {\n        children: rooms.map(function (room) {\n          return _jsxs(View, {\n            children: [_jsxs(View, {\n              children: [\"\\u041C\\u0435\\u0441\\u0442\\u043E:\", room.room.place]\n            }), _jsxs(View, {\n              children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F:\", room.room.date]\n            }), _jsxs(View, {\n              children: [\"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044F \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B:\", room.room.name]\n            }), _jsxs(View, {\n              children: [\"\\u041F\\u043E\\u0447\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044F \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B:\", room.room.email]\n            }), _jsxs(View, {\n              children: [_jsx(View, {\n                children: \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0448\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438:\"\n              }), room.users.map(function (user) {\n                return _jsxs(View, {\n                  children: [_jsxs(View, {\n                    children: [\"\\u0418\\u043C\\u044F:\", user.name]\n                  }), _jsxs(View, {\n                    children: [\"\\u041F\\u043E\\u0447\\u0442\\u0430:\", user.email]\n                  })]\n                });\n              })]\n            }), _jsx(Button, {\n              title: \"Yes\",\n              onPress: function onPress() {\n                InviteSubmit(room.room.id, 1);\n              }\n            }), _jsx(Button, {\n              title: \"No\",\n              onPress: function onPress() {\n                InviteSubmit(room.room.id, -1);\n              }\n            })]\n          });\n        })\n      })\n    })\n  });\n};\n\nexport default Rooms;","map":{"version":3,"names":["React","useEffect","useState","getRooms","acceptInvite","Rooms","navigation","rooms","setRooms","isRoomsLoaded","setIsRoomsLoaded","statusAccepted","setStatusAccepted","then","response","console","log","catch","e","InviteSubmit","roomId","status","map","room","place","date","name","email","users","user","id"],"sources":["/Users/apple/Documents/Programming/barBandNew/mobile/screens/RoomsScreen.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {StyleSheet, View, Text, Button, TouchableOpacity} from \"react-native\";\r\nimport {getRooms, acceptInvite} from \"../core/api/API\";\r\n\r\nconst Rooms = ({navigation}) => {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [isRoomsLoaded, setIsRoomsLoaded] = useState(false);\r\n    const [statusAccepted, setStatusAccepted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getRooms().then(async (response) => {\r\n            console.log(response)\r\n            await setRooms(response.rooms)\r\n            console.log(rooms)\r\n            console.log(typeof rooms)\r\n            setIsRoomsLoaded(true)\r\n        }).catch((e) => {\r\n            console.log(e)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const InviteSubmit = (roomId, status) => {\r\n        console.log(roomId);\r\n        console.log(status);\r\n        /*acceptInvite().then((response) => {\r\n            console.log(response)\r\n        }).catch((e) => {\r\n            console.log(e)\r\n        })*/\r\n    }\r\n\r\n    return(\r\n        <View>\r\n            <View>\r\n                {\r\n                    isRoomsLoaded && <View>\r\n                        {\r\n                            rooms.map((room) => (\r\n                                <View>\r\n                                    <View>Место:{room.room.place}</View>\r\n                                    <View>Время:{room.room.date}</View>\r\n                                    <View>Имя создателя комнаты:{room.room.name}</View>\r\n                                    <View>Почта создателя комнаты:{room.room.email}</View>\r\n                                    <View>\r\n                                        <View>Приглашенные пользователи:</View>\r\n                                        {\r\n                                            room.users.map((user) => (\r\n                                                <View>\r\n                                                    <View>Имя:{user.name}</View>\r\n                                                    <View>Почта:{user.email}</View>\r\n                                                </View>\r\n                                            ))\r\n                                        }\r\n                                    </View>\r\n                                    <Button title={\"Yes\"} onPress={() => {InviteSubmit(room.room.id, 1)}}/>\r\n                                    <Button title={\"No\"} onPress={() => {InviteSubmit(room.room.id, -1)}}/>\r\n                                </View>\r\n                            ))\r\n                        }\r\n                    </View>\r\n                }\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Rooms;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;AAEA,SAAQC,QAAR,EAAkBC,YAAlB;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAkB;EAAA,IAAhBC,UAAgB,QAAhBA,UAAgB;;EAE5B,gBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA0CN,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAOO,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAA4CR,QAAQ,CAAC,KAAD,CAApD;EAAA;EAAA,IAAOS,cAAP;EAAA,IAAuBC,iBAAvB;;EAEAX,SAAS,CAAC,YAAM;IACZE,QAAQ,GAAGU,IAAX;MAAA,8BAAgB,WAAOC,QAAP,EAAoB;QAChCC,OAAO,CAACC,GAAR,CAAYF,QAAZ;QACA,MAAMN,QAAQ,CAACM,QAAQ,CAACP,KAAV,CAAd;QACAQ,OAAO,CAACC,GAAR,CAAYT,KAAZ;QACAQ,OAAO,CAACC,GAAR,CAAY,OAAOT,KAAnB;QACAG,gBAAgB,CAAC,IAAD,CAAhB;MACH,CAND;;MAAA;QAAA;MAAA;IAAA,KAMGO,KANH,CAMS,UAACC,CAAD,EAAO;MACZH,OAAO,CAACC,GAAR,CAAYE,CAAZ;IACH,CARD;EASH,CAVQ,EAUN,EAVM,CAAT;;EAaA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,MAAT,EAAoB;IACrCN,OAAO,CAACC,GAAR,CAAYI,MAAZ;IACAL,OAAO,CAACC,GAAR,CAAYK,MAAZ;EAMH,CARD;;EAUA,OACI,KAAC,IAAD;IAAA,UACI,KAAC,IAAD;MAAA,UAEQZ,aAAa,IAAI,KAAC,IAAD;QAAA,UAETF,KAAK,CAACe,GAAN,CAAU,UAACC,IAAD;UAAA,OACN,MAAC,IAAD;YAAA,WACI,MAAC,IAAD;cAAA,8CAAaA,IAAI,CAACA,IAAL,CAAUC,KAAvB;YAAA,EADJ,EAEI,MAAC,IAAD;cAAA,8CAAaD,IAAI,CAACA,IAAL,CAAUE,IAAvB;YAAA,EAFJ,EAGI,MAAC,IAAD;cAAA,oIAA6BF,IAAI,CAACA,IAAL,CAAUG,IAAvC;YAAA,EAHJ,EAII,MAAC,IAAD;cAAA,gJAA+BH,IAAI,CAACA,IAAL,CAAUI,KAAzC;YAAA,EAJJ,EAKI,MAAC,IAAD;cAAA,WACI,KAAC,IAAD;gBAAA;cAAA,EADJ,EAGQJ,IAAI,CAACK,KAAL,CAAWN,GAAX,CAAe,UAACO,IAAD;gBAAA,OACX,MAAC,IAAD;kBAAA,WACI,MAAC,IAAD;oBAAA,kCAAWA,IAAI,CAACH,IAAhB;kBAAA,EADJ,EAEI,MAAC,IAAD;oBAAA,8CAAaG,IAAI,CAACF,KAAlB;kBAAA,EAFJ;gBAAA,EADW;cAAA,CAAf,CAHR;YAAA,EALJ,EAgBI,KAAC,MAAD;cAAQ,KAAK,EAAE,KAAf;cAAsB,OAAO,EAAE,mBAAM;gBAACR,YAAY,CAACI,IAAI,CAACA,IAAL,CAAUO,EAAX,EAAe,CAAf,CAAZ;cAA8B;YAApE,EAhBJ,EAiBI,KAAC,MAAD;cAAQ,KAAK,EAAE,IAAf;cAAqB,OAAO,EAAE,mBAAM;gBAACX,YAAY,CAACI,IAAI,CAACA,IAAL,CAAUO,EAAX,EAAe,CAAC,CAAhB,CAAZ;cAA+B;YAApE,EAjBJ;UAAA,EADM;QAAA,CAAV;MAFS;IAFzB;EADJ,EADJ;AAiCH,CA9DD;;AAgEA,eAAezB,KAAf"},"metadata":{},"sourceType":"module"}