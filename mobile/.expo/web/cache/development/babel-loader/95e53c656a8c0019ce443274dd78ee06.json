{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B \\u043B\\u0435\\u0442\\u043E\\u043C 2022\\\\work2\\\\barband\\\\mobile\\\\screens\\\\friends\\\\getFriends.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { getFriends } from \"../../core/api/API\";\nimport Checkbox from \"../../assets/checkBox\";\nimport { stylesFriend } from \"../../assets/stylesFriends\";\n\nvar GetFriends = function GetFriends(isModal) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      checkIsModal = _useState2[0],\n      setCheckIsModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      friends = _useState8[0],\n      setFriends = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      friendsArrLen = _useState12[0],\n      setFriendsArrLen = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      friendsCheckedList = _useState14[0],\n      setFriendsCheckedList = _useState14[1];\n\n  useEffect(function () {\n    setCheckIsModal(isModal);\n  }, []);\n  useEffect(function () {\n    getFriends().then(function (response) {\n      if (response === 1) {\n        setMessage(\"You don't have friends\");\n      } else if (response === 0) {\n        setMessage(\"Error\");\n      } else {\n        setFriends(response);\n      }\n\n      setIsLoaded(true);\n    }).catch(function (error) {\n      setError(error);\n    });\n  }, []);\n\n  function selectUser(id) {\n    var itemIndex = friendsCheckedList.indexOf(id);\n\n    if (itemIndex !== -1) {\n      friendsCheckedList.splice(itemIndex, 1);\n      setFriendsCheckedList(friendsCheckedList);\n      setFriendsArrLen(friendsArrLen - 1);\n    } else {\n      friendsCheckedList.push(id);\n      setFriendsCheckedList(friendsCheckedList);\n      setFriendsArrLen(friendsArrLen + 1);\n    }\n  }\n\n  if (isModal == true) {\n    alert('first');\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, isLoaded ? message ? React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 39\n      }\n    }, \"message\") : React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, friends.map(function (item) {\n      return React.createElement(View, {\n        style: stylesFriend.friendsList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }, React.createElement(Checkbox, {\n        onPress: function onPress() {\n          selectUser(item.id);\n        },\n        friendsArr: friendsCheckedList,\n        friendsArrLen: friendsArrLen,\n        title: item.email,\n        friendId: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 41\n        }\n      }));\n    })) : React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }, error));\n  } else {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, isLoaded ? message ? React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 39\n      }\n    }, \"message\") : React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, friends.map(function (item) {\n      return React.createElement(View, {\n        style: stylesFriend.friendsList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, item.email));\n    })) : React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }, error));\n  }\n};\n\nexport default GetFriends;","map":{"version":3,"names":["React","useEffect","useState","getFriends","Checkbox","stylesFriend","GetFriends","isModal","checkIsModal","setCheckIsModal","isLoaded","setIsLoaded","message","setMessage","friends","setFriends","error","setError","friendsArrLen","setFriendsArrLen","friendsCheckedList","setFriendsCheckedList","then","response","catch","selectUser","id","itemIndex","indexOf","splice","push","alert","map","item","friendsList","email"],"sources":["D:/проекты летом 2022/work2/barband/mobile/screens/friends/getFriends.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {View, Text, FlatList} from \"react-native\";\r\nimport {getFriends} from \"../../core/api/API\";\r\nimport Checkbox from \"../../assets/checkBox\"\r\nimport {stylesFriend} from \"../../assets/stylesFriends\";\r\n\r\nconst GetFriends = (isModal) => {\r\n    const [checkIsModal, setCheckIsModal] = useState(null)\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [message, setMessage] = useState(null)\r\n    const [friends, setFriends] = useState([]);\r\n    const [error, setError] = useState(null)\r\n    const [friendsArrLen, setFriendsArrLen] = useState(0)\r\n    const [friendsCheckedList, setFriendsCheckedList] = useState([])\r\n\r\n    useEffect(() => {\r\n        setCheckIsModal(isModal)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getFriends().then((response) => {\r\n            if (response === 1) {\r\n                setMessage(\"You don't have friends\")\r\n            } else if (response === 0) {\r\n                setMessage(\"Error\")\r\n            } else {\r\n                setFriends(response)\r\n            }\r\n            setIsLoaded(true)\r\n        }).catch(error => {\r\n            setError(error);\r\n        })\r\n\r\n    }, [])\r\n\r\n    function selectUser(id) {\r\n        let itemIndex = friendsCheckedList.indexOf(id)\r\n        if(itemIndex !== -1) {\r\n            friendsCheckedList.splice(itemIndex, 1)\r\n            setFriendsCheckedList(friendsCheckedList)\r\n            setFriendsArrLen(friendsArrLen-1)\r\n        } else {\r\n            friendsCheckedList.push(id)\r\n            setFriendsCheckedList(friendsCheckedList)\r\n            setFriendsArrLen(friendsArrLen+1)\r\n        }\r\n    }\r\n\r\n    if(isModal == true){\r\n        alert('first');\r\n        return (\r\n            <View>\r\n                {isLoaded ? message ? <span>message</span> :\r\n                        <View>\r\n                            {\r\n                                friends.map((item) => (\r\n                                    <View style={stylesFriend.friendsList}>\r\n                                        <Checkbox onPress={() => {selectUser(item.id)}}\r\n                                                  friendsArr={friendsCheckedList}\r\n                                                  friendsArrLen={friendsArrLen}\r\n                                                  title={item.email}\r\n                                                  friendId={item.id}\r\n                                        />\r\n                                    </View>\r\n                                ))\r\n                            }\r\n                        </View>\r\n                    : <span>{error}</span>}\r\n            </View>\r\n        )\r\n    } else {\r\n        return (\r\n            <View>\r\n                {isLoaded ? message ? <span>message</span> :\r\n                        <View>\r\n                            {\r\n                                friends.map((item) => (\r\n                                    <View style={stylesFriend.friendsList}>\r\n                                        <Text>{item.email}</Text>\r\n                                    </View>\r\n                                ))\r\n                            }\r\n                        </View>\r\n                    : <span>{error}</span>}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n<ul>\r\n                {friends.map(friend => (\r\n                    <li>\r\n                        <Checkbox/>\r\n                        <Text key={friend.id}>\r\n                            {`${friend.name}, ${friend.email}`}\r\n                        </Text>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n* */\r\n\r\nexport default GetFriends\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}