{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar urlAPI = 'http://localhost:5000';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var requestGetFriends = function requestGetFriends() {\n  var response;\n  return _regeneratorRuntime.async(function requestGetFriends$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(urlAPI + \"/getFriends\"));\n\n        case 2:\n          response = _context.sent;\n\n          if (!response.ok) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 9:\n          console.log(response);\n          return _context.abrupt(\"return\", 0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var requestFindFriends = function requestFindFriends(emailUser) {\n  var response;\n  return _regeneratorRuntime.async(function requestFindFriends$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(urlAPI + \"/findFriend\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({\n              email: emailUser\n            })\n          }));\n\n        case 2:\n          response = _context2.sent;\n\n          if (!response.ok) {\n            _context2.next = 12;\n            break;\n          }\n\n          onLoggedIn();\n          console.log(response);\n          alert(response);\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 12:\n          console.log(response);\n          return _context2.abrupt(\"return\", 0);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var onLoggedIn = function onLoggedIn(token) {\n  var response, jsonRes;\n  return _regeneratorRuntime.async(function onLoggedIn$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetch(urlAPI + \"/private\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Bearer \" + token\n            }\n          }));\n\n        case 2:\n          response = _context3.sent;\n\n          if (!response.ok) {\n            _context3.next = 15;\n            break;\n          }\n\n          _context3.prev = 4;\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          jsonRes = _context3.sent;\n\n          if (!(res.status === 200)) {\n            _context3.next = 10;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", jsonRes.message);\n\n        case 10:\n          _context3.next = 15;\n          break;\n\n        case 12:\n          _context3.prev = 12;\n          _context3.t0 = _context3[\"catch\"](4);\n          console.log(_context3.t0);\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[4, 12]], Promise);\n};","map":{"version":3,"names":["urlAPI","AsyncStorage","requestGetFriends","fetch","response","ok","json","console","log","requestFindFriends","emailUser","method","headers","body","JSON","stringify","email","onLoggedIn","alert","token","res","jsonRes","status","message"],"sources":["D:/проекты летом 2022/work2/barband/mobile/core/api/API.js"],"sourcesContent":["const urlAPI = 'http://localhost:5000'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const requestGetFriends = async () => {\r\n   let response = await fetch(`${urlAPI}/getFriends`);\r\n   if (response.ok) {\r\n      return await response.json();\r\n   } else {\r\n      console.log(response)\r\n      return 0\r\n   }\r\n}\r\n\r\nexport const requestFindFriends = async (emailUser) => {\r\n   let response = await fetch(`${urlAPI}/findFriend`, {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify({email: emailUser})\r\n   })\r\n   if (response.ok) {\r\n      onLoggedIn()\r\n      console.log(response)\r\n      alert(response)\r\n      return await response.json();\r\n   } else {\r\n      console.log(response)\r\n      return 0\r\n   }\r\n}\r\n\r\nexport const onLoggedIn = async (token) => {\r\n   let response = await fetch(`${urlAPI}/private`, {\r\n      method: 'GET',\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'Authorization': `Bearer ${token}`,\r\n      },\r\n   })\r\n   if (response.ok) {\r\n      try {\r\n         const jsonRes = await res.json();\r\n         if (res.status === 200) {\r\n            return jsonRes.message;\r\n         }\r\n      } catch (err) {\r\n         console.log(err);\r\n      }\r\n   }\r\n}\r\n"],"mappings":";AAAA,IAAMA,MAAM,GAAG,uBAAf;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACTC,KAAK,CAAIH,MAAJ,iBADI;;QAAA;UAC1BI,QAD0B;;UAAA,KAE1BA,QAAQ,CAACC,EAFiB;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAGdD,QAAQ,CAACE,IAAT,EAHc;;QAAA;UAAA;;QAAA;UAK3BC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;UAL2B,iCAMpB,CANoB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA1B;AAUP,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAOC,SAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACVP,KAAK,CAAIH,MAAJ,kBAAyB;YAChDW,MAAM,EAAE,MADwC;YAEhDC,OAAO,EAAE;cACN,gBAAgB;YADV,CAFuC;YAKhDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;cAACC,KAAK,EAAEN;YAAR,CAAf;UAL0C,CAAzB,CADK;;QAAA;UAC3BN,QAD2B;;UAAA,KAQ3BA,QAAQ,CAACC,EARkB;YAAA;YAAA;UAAA;;UAS5BY,UAAU;UACVV,OAAO,CAACC,GAAR,CAAYJ,QAAZ;UACAc,KAAK,CAACd,QAAD,CAAL;UAX4B;UAAA,iCAYfA,QAAQ,CAACE,IAAT,EAZe;;QAAA;UAAA;;QAAA;UAc5BC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;UAd4B,kCAerB,CAfqB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA3B;AAmBP,OAAO,IAAMa,UAAU,GAAG,SAAbA,UAAa,CAAOE,KAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACFhB,KAAK,CAAIH,MAAJ,eAAsB;YAC7CW,MAAM,EAAE,KADqC;YAE7CC,OAAO,EAAE;cACN,gBAAgB,kBADV;cAEN,6BAA2BO;YAFrB;UAFoC,CAAtB,CADH;;QAAA;UACnBf,QADmB;;UAAA,KAQnBA,QAAQ,CAACC,EARU;YAAA;YAAA;UAAA;;UAAA;UAAA;UAAA,iCAUKe,GAAG,CAACd,IAAJ,EAVL;;QAAA;UAUXe,OAVW;;UAAA,MAWbD,GAAG,CAACE,MAAJ,KAAe,GAXF;YAAA;YAAA;UAAA;;UAAA,kCAYPD,OAAO,CAACE,OAZD;;QAAA;UAAA;UAAA;;QAAA;UAAA;UAAA;UAejBhB,OAAO,CAACC,GAAR;;QAfiB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAnB"},"metadata":{},"sourceType":"module"}