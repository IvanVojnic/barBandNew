{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getRooms, acceptInvite } from \"../core/api/API\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Rooms = function Rooms(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    rooms = _useState2[0],\n    setRooms = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isRoomsLoaded = _useState4[0],\n    setIsRoomsLoaded = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    statusAccepted = _useState6[0],\n    setStatusAccepted = _useState6[1];\n  useEffect(function () {\n    var loadData = function loadData() {\n      return _regeneratorRuntime.async(function loadData$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            getRooms().then(function _callee(response) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    console.log(response);\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(setRooms(response.rooms));\n                  case 3:\n                    console.log(rooms);\n                    console.log(typeof rooms);\n                    setIsRoomsLoaded(true);\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, null, null, null, Promise);\n            }).catch(function (e) {\n              console.log(e);\n            });\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, null, null, null, Promise);\n    };\n    loadData();\n  }, []);\n  var InviteSubmit = function InviteSubmit(roomId, status) {\n    console.log(roomId);\n    console.log(status);\n    acceptInvite(roomId, status).then(function (response) {\n      alert(response);\n    }).catch(function (e) {\n      console.log(e);\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(View, {\n      children: isRoomsLoaded && _jsx(View, {\n        children: rooms.map(function (room) {\n          return _jsxs(View, {\n            children: [_jsxs(View, {\n              children: [\"\\u041C\\u0435\\u0441\\u0442\\u043E:\", room.room.place]\n            }), _jsxs(View, {\n              children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F:\", room.room.date]\n            }), _jsxs(View, {\n              children: [\"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044F \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B:\", room.room.name]\n            }), _jsxs(View, {\n              children: [\"\\u041F\\u043E\\u0447\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044F \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B:\", room.room.email]\n            }), _jsxs(View, {\n              children: [_jsx(View, {\n                children: \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0448\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438:\"\n              }), room.users.map(function (user) {\n                return _jsxs(View, {\n                  children: [_jsxs(View, {\n                    children: [\"\\u0418\\u043C\\u044F:\", user.name]\n                  }), _jsxs(View, {\n                    children: [\"\\u041F\\u043E\\u0447\\u0442\\u0430:\", user.email]\n                  })]\n                });\n              })]\n            }), _jsx(Button, {\n              title: \"Yes\",\n              onPress: function onPress() {\n                InviteSubmit(room.room.id, 1);\n              }\n            }), _jsx(Button, {\n              title: \"No\",\n              onPress: function onPress() {\n                InviteSubmit(room.room.id, -1);\n              }\n            })]\n          });\n        })\n      })\n    })\n  });\n};\nexport default Rooms;","map":{"version":3,"names":["React","useEffect","useState","getRooms","acceptInvite","Rooms","navigation","rooms","setRooms","isRoomsLoaded","setIsRoomsLoaded","statusAccepted","setStatusAccepted","loadData","then","response","console","log","catch","e","InviteSubmit","roomId","status","alert","map","room","place","date","name","email","users","user","id"],"sources":["C:/Users/MyPC/WebstormProjects/barBandNew/mobile/screens/RoomsScreen.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {StyleSheet, View, Text, Button, TouchableOpacity} from \"react-native\";\r\nimport {getRooms, acceptInvite} from \"../core/api/API\";\r\n\r\nconst Rooms = ({navigation}) => {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [isRoomsLoaded, setIsRoomsLoaded] = useState(false);\r\n    const [statusAccepted, setStatusAccepted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () =>{\r\n            getRooms().then(async (response) => {\r\n                console.log(response)\r\n                await setRooms(response.rooms)\r\n                console.log(rooms)\r\n                console.log(typeof rooms)\r\n                setIsRoomsLoaded(true)\r\n            }).catch((e) => {\r\n                console.log(e)\r\n            })\r\n        }\r\n       loadData()\r\n    }, [])\r\n\r\n\r\n    const InviteSubmit = (roomId, status) => {\r\n        console.log(roomId);\r\n        console.log(status);\r\n        acceptInvite(roomId, status).then((response) => {\r\n            alert(response)\r\n        }).catch((e) => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <View>\r\n            <View>\r\n                {\r\n                    isRoomsLoaded && <View>\r\n                        {\r\n                            rooms.map((room) => (\r\n                                <View>\r\n                                    <View>Место:{room.room.place}</View>\r\n                                    <View>Время:{room.room.date}</View>\r\n                                    <View>Имя создателя комнаты:{room.room.name}</View>\r\n                                    <View>Почта создателя комнаты:{room.room.email}</View>\r\n                                    <View>\r\n                                        <View>Приглашенные пользователи:</View>\r\n                                        {\r\n                                            room.users.map((user) => (\r\n                                                <View>\r\n                                                    <View>Имя:{user.name}</View>\r\n                                                    <View>Почта:{user.email}</View>\r\n                                                </View>\r\n                                            ))\r\n                                        }\r\n                                    </View>\r\n                                    <Button title={\"Yes\"} onPress={() => {InviteSubmit(room.room.id, 1)}}/>\r\n                                    <Button title={\"No\"} onPress={() => {InviteSubmit(room.room.id, -1)}}/>\r\n                                </View>\r\n                            ))\r\n                        }\r\n                    </View>\r\n                }\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Rooms;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}