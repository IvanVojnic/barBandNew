{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"D:\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B \\u043B\\u0435\\u0442\\u043E\\u043C 2022\\\\loginapp2\\\\mobile\\\\node_modules\\\\react-native\\\\Libraries\\\\Lists\\\\VirtualizedList.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Batchinator = require(\"../Interaction/Batchinator\");\n\nvar FillRateHelper = require(\"./FillRateHelper\");\n\nvar PropTypes = require('prop-types');\n\nvar React = require('react');\n\nvar ReactNative = require(\"../Renderer/shims/ReactNative\");\n\nvar RefreshControl = require(\"../Components/RefreshControl/RefreshControl\");\n\nvar ScrollView = require(\"../Components/ScrollView/ScrollView\");\n\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\n\nvar View = require(\"../Components/View/View\");\n\nvar ViewabilityHelper = require(\"./ViewabilityHelper\");\n\nvar flattenStyle = require(\"../StyleSheet/flattenStyle\");\n\nvar infoLog = require(\"../Utilities/infoLog\");\n\nvar invariant = require('invariant');\n\nvar warning = require('fbjs/lib/warning');\n\nvar _require = require(\"./VirtualizeUtils\"),\n    computeWindowedRenderLimits = _require.computeWindowedRenderLimits;\n\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\nvar VirtualizedList = function (_React$PureComponent) {\n  _inherits(VirtualizedList, _React$PureComponent);\n\n  var _super = _createSuper(VirtualizedList);\n\n  function VirtualizedList(_props, context) {\n    var _this;\n\n    _classCallCheck(this, VirtualizedList);\n\n    _this = _super.call(this, _props, context);\n\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.virtualizedList.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this);\n      }\n    };\n\n    _this._getNestedChildState = function (key) {\n      var existingChildData = _this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    _this._registerAsNestedChild = function (childList) {\n      var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = _this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      _this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    _this._averageCellLength = 0;\n    _this._cellKeysToChildListKeys = new Map();\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasDoneInitialScroll = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._nestedChildLists = new Map();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n\n      if (_this._isNestedWithSameOrientation()) {\n        return React.createElement(View, _extends({}, props, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 14\n          }\n        }));\n      } else if (onRefresh) {\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n        return React.createElement(ScrollView, _extends({}, props, {\n          refreshControl: props.refreshControl == null ? React.createElement(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1316,\n              columnNumber: 15\n            }\n          }) : props.refreshControl,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 9\n          }\n        }));\n      } else {\n        return React.createElement(ScrollView, _extends({}, props, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 14\n          }\n        }));\n      }\n    };\n\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n\n      _this.props.onLayout && _this.props.onLayout(e);\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n\n    _this._onLayoutFooter = function (e) {\n      _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());\n\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {\n        _this.scrollToIndex({\n          animated: false,\n          index: _this.props.initialScrollIndex\n        });\n\n        _this._hasDoneInitialScroll = true;\n      }\n\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - _this._scrollMetrics.offset;\n\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          return;\n        }\n\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n\n      _this._updateViewableItems(_this.props.data);\n\n      if (!_this.props) {\n        return;\n      }\n\n      _this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n\n      _this._computeBlankness();\n\n      _this._scheduleCellsToRenderUpdate();\n    };\n\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n\n    _this._onScrollEndDrag = function (e) {\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n\n      _this._computeBlankness();\n\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n\n    _this._onMomentumScrollEnd = function (e) {\n      _this._scrollMetrics.velocity = 0;\n\n      _this._computeBlankness();\n\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n\n    _this._updateCellsToRender = function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          getItemCount = _this$props.getItemCount,\n          onEndReachedThreshold = _this$props.onEndReachedThreshold;\n\n      var isVirtualizationDisabled = _this._isVirtualizationDisabled();\n\n      _this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      _this.setState(function (state) {\n        var newState;\n        var _this$_scrollMetrics = _this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          if (visibleLength > 0 && contentLength > 0) {\n            if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this.props, state, _this._getFrameMetricsApprox, _this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? _this.props.maxToRenderPerBatch : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && _this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last;\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = _this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    _this._createViewToken = function (index, isViewable) {\n      var _this$props2 = _this.props,\n          data = _this$props2.data,\n          getItem = _this$props2.getItem,\n          keyExtractor = _this$props2.keyExtractor;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n\n    _this._getFrameMetricsApprox = function (index) {\n      var frame = _this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var getItemLayout = _this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n\n    _this._getFrameMetrics = function (index) {\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          getItem = _this$props3.getItem,\n          getItemCount = _this$props3.getItemCount,\n          getItemLayout = _this$props3.getItemLayout,\n          keyExtractor = _this$props3.keyExtractor;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && _this._frames[keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n\n          if (__DEV__) {\n            var frameType = PropTypes.shape({\n              length: PropTypes.number.isRequired,\n              offset: PropTypes.number.isRequired,\n              index: PropTypes.number.isRequired\n            }).isRequired;\n            PropTypes.checkPropTypes({\n              frame: frameType\n            }, {\n              frame: frame\n            }, 'frame', 'VirtualizedList.getItemLayout');\n          }\n        }\n      }\n\n      return frame;\n    };\n\n    invariant(!_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(_props.windowSize > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      _this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),\n        onViewableItemsChanged: _this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: _this.props.initialScrollIndex || 0,\n      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1\n    };\n\n    if (_this._isNestedWithSameOrientation()) {\n      var storedState = _this.context.virtualizedList.getNestedChildState(_this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        _this.state = storedState;\n        _this._frames = storedState.frames;\n      }\n    }\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n      var frame = this._getFrameMetricsApprox(veryLast);\n\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      this._scrollRef.scrollTo(this.props.horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          horizontal = _this$props4.horizontal,\n          getItemCount = _this$props4.getItemCount,\n          getItemLayout = _this$props4.getItemLayout,\n          onScrollToIndexFailed = _this$props4.onScrollToIndexFailed;\n      var animated = params.animated,\n          index = params.index,\n          viewOffset = params.viewOffset,\n          viewPosition = params.viewPosition;\n      invariant(index >= 0 && index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" but maximum is \" + (getItemCount(data) - 1));\n\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n\n      var frame = this._getFrameMetricsApprox(index);\n\n      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount;\n      var itemCount = getItemCount(data);\n\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n          offset = params.offset;\n\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      this._scrollRef.scrollTo(this.props.horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref.recordInteraction();\n      });\n\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return ReactNative.findNodeHandle(this._scrollRef);\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this._scrollRef) {\n        this._scrollRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        virtualizedList: {\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: this.props.horizontal,\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo()\n        }\n      };\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      return this.context.virtualizedCell && this.context.virtualizedCell.cellKey || 'rootList';\n    }\n  }, {\n    key: \"_getListKey\",\n    value: function _getListKey() {\n      return this.props.listKey || this._getCellKey();\n    }\n  }, {\n    key: \"_getDebugInfo\",\n    value: function _getDebugInfo() {\n      return {\n        listKey: this._getListKey(),\n        cellKey: this._getCellKey(),\n        horizontal: !!this.props.horizontal,\n        parent: this.context.virtualizedList ? this.context.virtualizedList.debugInfo : null\n      };\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.virtualizedList.registerAsNestedChild({\n          cellKey: this._getCellKey(),\n          key: this._getListKey(),\n          ref: this,\n          parentDebugInfo: this.context.virtualizedList.debugInfo\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.virtualizedList.unregisterAsNestedChild({\n          key: this._getListKey(),\n          state: {\n            first: this.state.first,\n            last: this.state.last,\n            frames: this._frames\n          }\n        });\n      }\n\n      this._updateViewableItems(null);\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n\n      this._fillRateHelper.deactivateAndFlush();\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          CellRendererComponent = _this$props6.CellRendererComponent,\n          ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n          data = _this$props6.data,\n          getItem = _this$props6.getItem,\n          getItemCount = _this$props6.getItemCount,\n          horizontal = _this$props6.horizontal,\n          keyExtractor = _this$props6.keyExtractor;\n      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n\n      var _loop = function _loop(ii) {\n        var item = getItem(data, ii);\n        var key = keyExtractor(item, ii);\n\n        _this2._indicesToKeys.set(ii, key);\n\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n\n        cells.push(React.createElement(CellRenderer, {\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          cellKey: key,\n          fillRateHelper: _this2._fillRateHelper,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          key: key,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this2._onUpdateSeparators,\n          onLayout: function onLayout(e) {\n            return _this2._onCellLayout(e, key, ii);\n          },\n          onUnmount: _this2._onCellUnmount,\n          parentProps: _this2.props,\n          ref: function ref(_ref) {\n            _this2._cellRefs[key] = _ref;\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 9\n          }\n        }));\n        prevCellKey = key;\n      };\n\n      for (var ii = first; ii <= last; ii++) {\n        _loop(ii);\n      }\n    }\n  }, {\n    key: \"_isVirtualizationDisabled\",\n    value: function _isVirtualizationDisabled() {\n      return this.props.disableVirtualization || false;\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context.virtualizedList;\n      return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (__DEV__) {\n        var flatStyles = flattenStyle(this.props.contentContainerStyle);\n        warning(flatStyles == null || flatStyles.flexWrap !== 'wrap', '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n\n      var _this$props7 = this.props,\n          ListEmptyComponent = _this$props7.ListEmptyComponent,\n          ListFooterComponent = _this$props7.ListFooterComponent,\n          ListHeaderComponent = _this$props7.ListHeaderComponent;\n      var _this$props8 = this.props,\n          data = _this$props8.data,\n          horizontal = _this$props8.horizontal;\n\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n      var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n\n        var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 9\n          }\n        });\n        cells.push(React.createElement(VirtualizedCellWrapper, {\n          cellKey: this._getCellKey() + '-header',\n          key: \"$header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          onLayout: this._onLayoutHeader,\n          style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 11\n          }\n        }, element)));\n      }\n\n      var itemCount = this.props.getItemCount(data);\n\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = !horizontal ? 'height' : 'width';\n        var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;\n        var _this$state = this.state,\n            first = _this$state.first,\n            last = _this$state.last;\n\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n        var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n        if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n          var insertedStickySpacer = false;\n\n          if (stickyIndicesFromProps.size > 0) {\n            var stickyOffset = ListHeaderComponent ? 1 : 0;\n\n            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n              if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n                var stickyBlock = this._getFrameMetricsApprox(ii);\n\n                var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n                cells.push(React.createElement(View, {\n                  key: \"$sticky_lead\",\n                  style: _defineProperty({}, spacerKey, leadSpace),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1029,\n                    columnNumber: 17\n                  }\n                }));\n\n                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n                var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n                cells.push(React.createElement(View, {\n                  key: \"$sticky_trail\",\n                  style: _defineProperty({}, spacerKey, trailSpace),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 17\n                  }\n                }));\n                insertedStickySpacer = true;\n                break;\n              }\n            }\n          }\n\n          if (!insertedStickySpacer) {\n            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n            var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n            cells.push(React.createElement(View, {\n              key: \"$lead_spacer\",\n              style: _defineProperty({}, spacerKey, firstSpace),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 13\n              }\n            }));\n          }\n        }\n\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n\n        if (!isVirtualizationDisabled && last < itemCount - 1) {\n          var lastFrame = this._getFrameMetricsApprox(last);\n\n          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n          var endFrame = this._getFrameMetricsApprox(end);\n\n          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n          cells.push(React.createElement(View, {\n            key: \"$tail_spacer\",\n            style: _defineProperty({}, spacerKey, tailSpacerLength),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 11\n            }\n          }));\n        }\n      } else if (ListEmptyComponent) {\n        var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 9\n          }\n        });\n\n        cells.push(React.cloneElement(_element, {\n          key: '$empty',\n          onLayout: function onLayout(event) {\n            _this3._onLayoutEmpty(event);\n\n            if (_element.props.onLayout) {\n              _element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, _element.props.style)\n        }));\n      }\n\n      if (ListFooterComponent) {\n        var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 9\n          }\n        });\n\n        cells.push(React.createElement(VirtualizedCellWrapper, {\n          cellKey: this._getFooterCellKey(),\n          key: \"$footer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          onLayout: this._onLayoutFooter,\n          style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 11\n          }\n        }, _element2)));\n      }\n\n      var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: this.props.scrollEventThrottle,\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n\n      this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n      var innerRet = React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n        ref: this._captureScrollRef\n      }, cells);\n      var ret = innerRet;\n\n      if (__DEV__) {\n        ret = React.createElement(ScrollView.Context.Consumer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 9\n          }\n        }, function (scrollContext) {\n          if (scrollContext != null && !scrollContext.horizontal === !_this3.props.horizontal && !_this3._hasWarned.nesting && _this3.context.virtualizedList == null) {\n            console.warn('VirtualizedLists should never be nested inside plain ScrollViews with the same ' + 'orientation - use another VirtualizedList-backed container instead.');\n            _this3._hasWarned.nesting = true;\n          }\n\n          return innerRet;\n        });\n      }\n\n      if (this.props.debug) {\n        return React.createElement(View, {\n          style: styles.debug,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 9\n          }\n        }, ret, this._renderDebugOverlay());\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props9 = this.props,\n          data = _this$props9.data,\n          extraData = _this$props9.extraData;\n\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n\n      var hiPriInProgress = this._hiPriInProgress;\n\n      this._scheduleCellsToRenderUpdate();\n\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellLayout\",\n    value: function _onCellLayout(e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n\n      this._triggerRemeasureForChildListsInCell(cellKey);\n\n      this._computeBlankness();\n\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n      if (childListKeys) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n          var childKey = _step2.value;\n\n          var childList = this._nestedChildLists.get(childKey);\n\n          childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n        }\n      }\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this4 = this;\n\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n\n        this._scrollRef.measureLayout(this.context.virtualizedList.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n            x: x,\n            y: y\n          });\n          _this4._scrollMetrics.contentLength = _this4._selectLength({\n            width: width,\n            height: height\n          });\n\n          var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.virtualizedList.getScrollMetrics());\n\n          _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          _this4._scrollMetrics.offset = scrollMetrics.offset;\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var _this5 = this;\n\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this._getFrameMetricsApprox(ii);\n\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n\n      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n      var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 7\n        }\n      }, framesInLayout.map(function (f, ii) {\n        return React.createElement(View, {\n          key: 'f' + ii,\n          style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n            top: f.offset * normalize,\n            height: f.length * normalize\n          }],\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 11\n          }\n        });\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n          top: windowTop * normalize,\n          height: windowLen * normalize\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n          top: visTop * normalize,\n          height: visLen * normalize\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1503,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !this.props.horizontal ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !this.props.horizontal ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEndReached\",\n    value: function _maybeCallOnEndReached() {\n      var _this$props10 = this.props,\n          data = _this$props10.data,\n          getItemCount = _this$props10.getItemCount,\n          onEndReached = _this$props10.onEndReached,\n          onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n          contentLength = _this$_scrollMetrics2.contentLength,\n          visibleLength = _this$_scrollMetrics2.visibleLength,\n          offset = _this$_scrollMetrics2.offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      var threshold = onEndReachedThreshold ? onEndReachedThreshold * visibleLength : 0;\n\n      if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (distanceFromEnd > threshold) {\n        this._sentEndForContentLength = 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state2 = this.state,\n          first = _this$state2.first,\n          last = _this$state2.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n          offset = _this$_scrollMetrics3.offset,\n          visibleLength = _this$_scrollMetrics3.visibleLength,\n          velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var scrollingThreshold = this.props.onEndReachedThreshold * visibleLength / 2;\n\n      if (first > 0) {\n        var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n        hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n      }\n\n      if (last < itemCount - 1) {\n        var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n        hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n      }\n\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n\n        this._updateCellsToRender();\n\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(data) {\n      var _this6 = this;\n\n      var getItemCount = this.props.getItemCount;\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(getItemCount(data), _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._getFrameMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, _this6.state);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var data = newProps.data,\n          getItemCount = newProps.getItemCount,\n          maxToRenderPerBatch = newProps.maxToRenderPerBatch;\n      return {\n        first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n        last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n      };\n    }\n  }]);\n\n  return VirtualizedList;\n}(React.PureComponent);\n\nVirtualizedList.defaultProps = {\n  disableVirtualization: false,\n  horizontal: false,\n  initialNumToRender: 10,\n  keyExtractor: function keyExtractor(item, index) {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (item.id != null) {\n      return item.id;\n    }\n\n    _usedIndexForKey = true;\n\n    if (item.type && item.type.displayName) {\n      _keylessItemComponentName = item.type.displayName;\n    }\n\n    return String(index);\n  },\n  maxToRenderPerBatch: 10,\n  onEndReachedThreshold: 2,\n  scrollEventThrottle: 50,\n  updateCellsBatchingPeriod: 50,\n  windowSize: 21\n};\nVirtualizedList.contextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  }),\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func,\n    debugInfo: PropTypes.shape({\n      listKey: PropTypes.string,\n      cellKey: PropTypes.string\n    })\n  })\n};\nVirtualizedList.childContextTypes = {\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func\n  })\n};\n\nvar CellRenderer = function (_React$Component) {\n  _inherits(CellRenderer, _React$Component);\n\n  var _super2 = _createSuper(CellRenderer);\n\n  function CellRenderer() {\n    var _this7;\n\n    _classCallCheck(this, CellRenderer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this7 = _super2.call.apply(_super2, [this].concat(args));\n    _this7.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this7.props.item\n      }\n    };\n    _this7._separators = {\n      highlight: function highlight() {\n        var _this7$props = _this7.props,\n            cellKey = _this7$props.cellKey,\n            prevCellKey = _this7$props.prevCellKey;\n\n        _this7.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this7$props2 = _this7.props,\n            cellKey = _this7$props2.cellKey,\n            prevCellKey = _this7$props2.prevCellKey;\n\n        _this7.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this7$props3 = _this7.props,\n            cellKey = _this7$props3.cellKey,\n            prevCellKey = _this7$props3.prevCellKey;\n\n        _this7.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this7;\n  }\n\n  _createClass(CellRenderer, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        virtualizedCell: {\n          cellKey: this.props.cellKey\n        }\n      };\n    }\n  }, {\n    key: \"updateSeparatorProps\",\n    value: function updateSeparatorProps(newProps) {\n      this.setState(function (state) {\n        return {\n          separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onUnmount(this.props.cellKey);\n    }\n  }, {\n    key: \"_renderElement\",\n    value: function _renderElement(renderItem, ListItemComponent, item, index) {\n      if (renderItem && ListItemComponent) {\n        console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n      }\n\n      if (ListItemComponent) {\n        return React.createElement(ListItemComponent, {\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n\n      if (renderItem) {\n        return renderItem({\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n\n      invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props11 = this.props,\n          CellRendererComponent = _this$props11.CellRendererComponent,\n          ItemSeparatorComponent = _this$props11.ItemSeparatorComponent,\n          fillRateHelper = _this$props11.fillRateHelper,\n          horizontal = _this$props11.horizontal,\n          item = _this$props11.item,\n          index = _this$props11.index,\n          inversionStyle = _this$props11.inversionStyle,\n          parentProps = _this$props11.parentProps;\n      var renderItem = parentProps.renderItem,\n          getItemLayout = parentProps.getItemLayout,\n          ListItemComponent = parentProps.ListItemComponent;\n\n      var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n      var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;\n      var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, _extends({}, this.state.separatorProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2106,\n          columnNumber: 7\n        }\n      }));\n      var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n\n      if (!CellRendererComponent) {\n        return React.createElement(View, {\n          style: cellStyle,\n          onLayout: onLayout,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2120,\n            columnNumber: 9\n          }\n        }, element, itemSeparator);\n      }\n\n      return React.createElement(CellRendererComponent, _extends({}, this.props, {\n        style: cellStyle,\n        onLayout: onLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2127,\n          columnNumber: 7\n        }\n      }), element, itemSeparator);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      return {\n        separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n          leadingItem: props.item\n        })\n      };\n    }\n  }]);\n\n  return CellRenderer;\n}(React.Component);\n\nCellRenderer.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\n\nvar VirtualizedCellWrapper = function (_React$Component2) {\n  _inherits(VirtualizedCellWrapper, _React$Component2);\n\n  var _super3 = _createSuper(VirtualizedCellWrapper);\n\n  function VirtualizedCellWrapper() {\n    _classCallCheck(this, VirtualizedCellWrapper);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(VirtualizedCellWrapper, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        virtualizedCell: {\n          cellKey: this.props.cellKey\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return VirtualizedCellWrapper;\n}(React.Component);\n\nVirtualizedCellWrapper.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nmodule.exports = VirtualizedList;","map":{"version":3,"names":["Batchinator","require","FillRateHelper","PropTypes","React","ReactNative","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","infoLog","invariant","warning","computeWindowedRenderLimits","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","props","context","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","virtualizedList","getOutermostParentListRef","_getNestedChildState","key","existingChildData","_nestedChildLists","get","state","_registerAsNestedChild","childList","childListsInCell","_cellKeysToChildListKeys","cellKey","Set","add","set","ref","console","error","describeNestedLists","horizontal","_hasInteracted","recordInteraction","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_averageCellLength","Map","_frames","_footerLength","_hasDoneInitialScroll","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","scrollToIndex","animated","index","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","contentOffset","Math","max","perf","prevDt","_updateViewableItems","data","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","getItemCount","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_getFrameMetricsApprox","distanceFromEnd","renderAhead","maxToRenderPerBatch","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","isViewable","getItem","keyExtractor","item","frame","_getFrameMetrics","getItemLayout","length","__DEV__","frameType","shape","number","isRequired","checkPropTypes","__isNative","windowSize","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","initialNumToRender","storedState","getNestedChildState","_getListKey","frames","params","veryLast","scrollTo","x","y","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","itemCount","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","getScrollMetrics","registerAsNestedChild","unregisterAsNestedChild","debugInfo","_getDebugInfo","virtualizedCell","listKey","_getCellKey","parent","parentDebugInfo","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","has","undefined","_onCellLayout","disableVirtualization","nestedContext","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","warn","lastFrame","endFrame","tailSpacerLength","cloneElement","event","style","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","innerRet","renderScrollComponent","ret","scrollContext","nesting","debug","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","measureLayout","scrollMetrics","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","threshold","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","prevState","PureComponent","defaultProps","id","type","displayName","String","contextTypes","string","func","bool","childContextTypes","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","renderItem","ListItemComponent","createElement","separators","fillRateHelper","parentProps","_renderElement","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","Component","VirtualizedCellWrapper","children","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["D:/проекты летом 2022/loginapp2/mobile/node_modules/react-native/Libraries/Lists/VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Batchinator = require('../Interaction/Batchinator');\nconst FillRateHelper = require('./FillRateHelper');\nconst PropTypes = require('prop-types');\nconst React = require('react');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\nconst ViewabilityHelper = require('./ViewabilityHelper');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\nconst warning = require('fbjs/lib/warning');\n\nconst {computeWindowedRenderLimits} = require('./VirtualizeUtils');\n\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\n\ntype Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n  ...\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n  ...\n};\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype RequiredProps = {|\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n|};\ntype OptionalProps = {|\n  renderItem?: ?RenderItemType<Item>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  // e.g. height, y\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered in between each item, but not at the top or bottom. By default, `highlighted` and\n   * `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight`\n   * which will update the `highlighted` prop, but you can also add custom props with\n   * `separators.updateProps`.\n   */\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       ListItemComponent={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  /**\n   * Called once when the scroll position gets within `onEndReachedThreshold` of the rendered\n   * content.\n   */\n  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,\n  /**\n   * How far from the end (in units of visible length of the list) the bottom edge of the\n   * list must be from the end of the content to trigger the `onEndReached` callback.\n   * Thus a value of 0.5 will trigger `onEndReached` when the end of the content is\n   * within half the visible length of the list.\n   */\n  onEndReachedThreshold?: ?number,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?() => void,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n    ...\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  /**\n   * See `ViewabilityHelper` for flow type and further documentation.\n   */\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n  /**\n   * The legacy implementation is no longer supported.\n   */\n  legacyImplementation?: empty,\n|};\n\ntype Props = {|\n  ...React.ElementConfig<typeof ScrollView>,\n  ...RequiredProps,\n  ...OptionalProps,\n|};\n\ntype DefaultProps = {|\n  disableVirtualization: boolean,\n  horizontal: boolean,\n  initialNumToRender: number,\n  keyExtractor: (item: Item, index: number) => string,\n  maxToRenderPerBatch: number,\n  onEndReachedThreshold: number,\n  scrollEventThrottle: number,\n  updateCellsBatchingPeriod: number,\n  windowSize: number,\n|};\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype Frame = {\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n  ...\n};\n\ntype ChildListState = {\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame, ...},\n  ...\n};\n\ntype State = {\n  first: number,\n  last: number,\n  ...\n};\n\n// Data propagated through nested lists (regardless of orientation) that is\n// useful for producing diagnostics for usage errors involving nesting (e.g\n// missing/duplicate keys).\ntype ListDebugInfo = {\n  cellKey: string,\n  listKey: string,\n  parent: ?ListDebugInfo,\n  // We include all ancestors regardless of orientation, so this is not always\n  // identical to the child's orientation.\n  horizontal: boolean,\n};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist.html)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  props: Props;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} but maximum is ${getItemCount(\n        data,\n      ) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps: DefaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      if (item.id != null) {\n        return item.id;\n      }\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  static contextTypes:\n    | any\n    | {|\n        virtualizedCell: {|\n          cellKey: React$PropType$Primitive<string>,\n        |},\n        virtualizedList: {|\n          getScrollMetrics: React$PropType$Primitive<Function>,\n          horizontal: React$PropType$Primitive<boolean>,\n          getOutermostParentListRef: React$PropType$Primitive<Function>,\n          getNestedChildState: React$PropType$Primitive<Function>,\n          registerAsNestedChild: React$PropType$Primitive<Function>,\n          unregisterAsNestedChild: React$PropType$Primitive<Function>,\n          debugInfo: {|\n            listKey: React$PropType$Primitive<string>,\n            cellKey: React$PropType$Primitive<string>,\n          |},\n        |},\n      |} = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n      debugInfo: PropTypes.shape({\n        listKey: PropTypes.string,\n        cellKey: PropTypes.string,\n      }),\n    }),\n  };\n\n  static childContextTypes:\n    | any\n    | {|\n        getScrollMetrics: React$PropType$Primitive<Function>,\n        horizontal: React$PropType$Primitive<boolean>,\n        getOutermostParentListRef: React$PropType$Primitive<Function>,\n        getNestedChildState: React$PropType$Primitive<Function>,\n        registerAsNestedChild: React$PropType$Primitive<Function>,\n        unregisterAsNestedChild: React$PropType$Primitive<Function>,\n      |} = {\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  getChildContext(): {|\n    virtualizedList: {\n      getScrollMetrics: () => {\n        contentLength: number,\n        dOffset: number,\n        dt: number,\n        offset: number,\n        timestamp: number,\n        velocity: number,\n        visibleLength: number,\n        ...\n      },\n      horizontal: ?boolean,\n      getOutermostParentListRef: Function,\n      getNestedChildState: string => ?ChildListState,\n      registerAsNestedChild: ({\n        cellKey: string,\n        key: string,\n        ref: VirtualizedList,\n        parentDebugInfo: ListDebugInfo,\n        ...\n      }) => ?ChildListState,\n      unregisterAsNestedChild: ({\n        key: string,\n        state: ChildListState,\n        ...\n      }) => void,\n      debugInfo: ListDebugInfo,\n      ...\n    },\n  |} {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo(),\n      },\n    };\n  }\n\n  _getCellKey(): string {\n    return (\n      (this.context.virtualizedCell && this.context.virtualizedCell.cellKey) ||\n      'rootList'\n    );\n  }\n\n  _getListKey(): string {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo(): ListDebugInfo {\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: !!this.props.horizontal,\n      parent: this.context.virtualizedList\n        ? this.context.virtualizedList.debugInfo\n        : null,\n    };\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.virtualizedList.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n    parentDebugInfo: ListDebugInfo,\n    ...\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.\\n\\n' +\n          describeNestedLists({\n            ...childList,\n            // We're called from the child's componentDidMount, so it's safe to\n            // read the child's props here (albeit weird).\n            horizontal: !!childList.ref.props.horizontal,\n          }),\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n    ...\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props, context: Object) {\n    super(props, context);\n    invariant(\n      // $FlowFixMe\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.virtualizedList.getNestedChildState(\n        this._getListKey(),\n      );\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.virtualizedList.debugInfo,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    const {data, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context.virtualizedList;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(\n        flatStyles == null || flatStyles.flexWrap !== 'wrap',\n        '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n          'Consider using `numColumns` with `FlatList` instead.',\n      );\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n                 * suppresses an error found when Flow v0.111 was deployed. To\n                 * see the error, delete this comment and run Flow. */\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n                 * suppresses an error found when Flow v0.111 was deployed. To\n                 * see the error, delete this comment and run Flow. */\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n             * suppresses an error found when Flow v0.111 was deployed. To see\n             * the error, delete this comment and run Flow. */\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.111 was deployed. To see the error,\n           * delete this comment and run Flow. */\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(\n            inversionStyle,\n            element.props.style,\n          ),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n    };\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const innerRet = React.cloneElement(\n      (this.props.renderScrollComponent || this._defaultRenderScrollComponent)(\n        scrollProps,\n      ),\n      {\n        ref: this._captureScrollRef,\n      },\n      cells,\n    );\n    let ret = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal === !this.props.horizontal &&\n              !this._hasWarned.nesting &&\n              this.context.virtualizedList == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.warn(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation - use another VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {\n      ref: ?VirtualizedList,\n      state: ?ChildListState,\n      ...\n    },\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.111 was deployed. To see the error,\n           * delete this comment and run Flow. */\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        // $FlowFixMe Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.virtualizedList.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.virtualizedList.getScrollMetrics(),\n          );\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = e => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    const threshold = onEndReachedThreshold\n      ? onEndReachedThreshold * visibleLength\n      : 0;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      distanceFromEnd < threshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      this.scrollToIndex({\n        animated: false,\n        index: this.props.initialScrollIndex,\n      });\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      (this.props.onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      const {contentLength, offset, visibleLength} = this._scrollMetrics;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (visibleLength > 0 && contentLength > 0) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      if (\n        newState != null &&\n        newState.first === state.first &&\n        newState.last === state.last\n      ) {\n        newState = null;\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {\n    length: number,\n    offset: number,\n    ...\n  } => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n        if (__DEV__) {\n          const frameType = PropTypes.shape({\n            length: PropTypes.number.isRequired,\n            offset: PropTypes.number.isRequired,\n            index: PropTypes.number.isRequired,\n          }).isRequired;\n          PropTypes.checkPropTypes(\n            {frame: frameType},\n            {frame},\n            'frame',\n            'VirtualizedList.getItemLayout',\n          );\n        }\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\ntype CellRendererProps = {\n  CellRendererComponent?: ?React.ComponentType<any>,\n  ItemSeparatorComponent: ?React.ComponentType<*>,\n  cellKey: string,\n  fillRateHelper: FillRateHelper,\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: Item,\n  // This is extracted by ScrollViewStickyHeader\n  onLayout: (event: Object) => void,\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n  parentProps: {\n    // e.g. height, y,\n    getItemLayout?: (\n      data: any,\n      index: number,\n    ) => {\n      length: number,\n      offset: number,\n      index: number,\n      ...\n    },\n    renderItem?: ?RenderItemType<Item>,\n    ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n    ...\n  },\n  prevCellKey: ?string,\n  ...\n};\n\ntype CellRendererState = {\n  separatorProps: $ReadOnly<{|\n    highlighted: boolean,\n    leadingItem: ?Item,\n  |}>,\n  ...\n};\n\nclass CellRenderer extends React.Component<\n  CellRendererProps,\n  CellRendererState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  static getDerivedStateFromProps(\n    props: CellRendererProps,\n    prevState: CellRendererState,\n  ): ?CellRendererState {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe(>=0.108.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.108 was deployed. To see the error, delete\n       * this comment and run Flow. */\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout, ListItemComponent} = parentProps;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    const onLayout =\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    if (!CellRendererComponent) {\n      return (\n        /* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.89 was deployed. To see the error, delete\n         * this comment and run Flow. */\n        <View style={cellStyle} onLayout={onLayout}>\n          {element}\n          {itemSeparator}\n        </View>\n      );\n    }\n    return (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n  }\n}\n\nclass VirtualizedCellWrapper extends React.Component<{\n  cellKey: string,\n  children: React.Node,\n  ...\n}> {\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nfunction describeNestedLists(childList: {\n  +cellKey: string,\n  +key: string,\n  +ref: VirtualizedList,\n  +parentDebugInfo: ListDebugInfo,\n  +horizontal: boolean,\n  ...\n}) {\n  let trace =\n    'VirtualizedList trace:\\n' +\n    `  Child (${childList.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n    `    listKey: ${childList.key}\\n` +\n    `    cellKey: ${childList.cellKey}`;\n\n  let debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace +=\n      `\\n  Parent (${debugInfo.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n      `    listKey: ${debugInfo.listKey}\\n` +\n      `    cellKey: ${debugInfo.cellKey}`;\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}