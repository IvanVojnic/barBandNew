{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Checkbox = function Checkbox(props) {\n  var _useState = useState(\"#fff\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectColor = _useState2[0],\n    setSelectColor = _useState2[1];\n  useEffect(function () {\n    var array = props.friendsArr;\n    if (array.indexOf(props.friendId) !== -1) {\n      setSelectColor(\"#00ff04\");\n    } else {\n      setSelectColor(\"#fff\");\n    }\n  }, [props.friendsArrLen]);\n  return _jsxs(View, {\n    children: [_jsx(TouchableHighlight, {\n      onPress: props.onPress,\n      style: styles.CheckboxContainer,\n      children: _jsx(View, {\n        style: {\n          backgroundColor: \"\" + selectColor,\n          height: 8,\n          width: 8\n        }\n      })\n    }), _jsx(Text, {\n      children: props.title\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  CheckboxContainer: {\n    display: 'inlineFlex',\n    border: '3px solid green',\n    height: '15px',\n    width: '15px',\n    padding: 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nexport default Checkbox;","map":{"version":3,"names":["React","useEffect","useState","Checkbox","props","selectColor","setSelectColor","array","friendsArr","indexOf","friendId","friendsArrLen","onPress","styles","CheckboxContainer","backgroundColor","height","width","title","StyleSheet","create","display","border","padding","alignItems","justifyContent"],"sources":["C:/Users/MyPC/WebstormProjects/barBandNew/mobile/assets/checkBox.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    StyleSheet,\r\n    View, Pressable, Text, TouchableHighlight\r\n} from 'react-native';\r\n\r\nconst Checkbox = (props) => {\r\n    const [selectColor, setSelectColor] = useState(\"#fff\")\r\n    useEffect(() => {\r\n        let array = props.friendsArr\r\n        if(array.indexOf(props.friendId) !== -1){\r\n            setSelectColor(\"#00ff04\")\r\n        } else {\r\n            setSelectColor(\"#fff\")\r\n        }\r\n    }, [props.friendsArrLen])\r\n    return (\r\n        <View>\r\n            <TouchableHighlight onPress={props.onPress} style={styles.CheckboxContainer}>\r\n                <View style={{backgroundColor: `${selectColor}`, height: 8, width: 8}}></View>\r\n            </TouchableHighlight>\r\n        <Text>{props.title}</Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create(\r\n    {\r\n        CheckboxContainer: {\r\n            display: 'inlineFlex',\r\n            border: '3px solid green',\r\n            height: '15px',\r\n            width: '15px',\r\n            padding: 2,\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        },\r\n    });\r\n\r\n/*Checkbox.propTypes = {\r\n    keyValue: PropTypes.number.isRequired,\r\n    }/*size: PropTypes.number,\r\n    color: PropTypes.string,\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    labelColor: PropTypes.string,\r\n    checkedObjArr: PropTypes.object.isRequired\r\n}\r\nCheckbox.defaultProps = {\r\n    size: 32,\r\n    checked: false,\r\n    value: 'Default',\r\n    label: 'Default',\r\n    color: '#cecece',\r\n    labelColor: '000000',\r\n}*/\r\n\r\nexport default Checkbox\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMjD,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,KAAK,EAAK;EACxB,gBAAsCF,QAAQ,CAAC,MAAM,CAAC;IAAA;IAA/CG,WAAW;IAAEC,cAAc;EAClCL,SAAS,CAAC,YAAM;IACZ,IAAIM,KAAK,GAAGH,KAAK,CAACI,UAAU;IAC5B,IAAGD,KAAK,CAACE,OAAO,CAACL,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC;MACpCJ,cAAc,CAAC,SAAS,CAAC;IAC7B,CAAC,MAAM;MACHA,cAAc,CAAC,MAAM,CAAC;IAC1B;EACJ,CAAC,EAAE,CAACF,KAAK,CAACO,aAAa,CAAC,CAAC;EACzB,OACI,MAAC,IAAI;IAAA,WACD,KAAC,kBAAkB;MAAC,OAAO,EAAEP,KAAK,CAACQ,OAAQ;MAAC,KAAK,EAAEC,MAAM,CAACC,iBAAkB;MAAA,UACxE,KAAC,IAAI;QAAC,KAAK,EAAE;UAACC,eAAe,OAAKV,WAAa;UAAEW,MAAM,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAC;MAAE;IAAQ,EAC7D,EACzB,KAAC,IAAI;MAAA,UAAEb,KAAK,CAACc;IAAK,EAAQ;EAAA,EACnB;AAEf,CAAC;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAM,CAC5B;EACIN,iBAAiB,EAAE;IACfO,OAAO,EAAE,YAAY;IACrBC,MAAM,EAAE,iBAAiB;IACzBN,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,MAAM;IACbM,OAAO,EAAE,CAAC;IACVC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAqBN,eAAetB,QAAQ"},"metadata":{},"sourceType":"module"}